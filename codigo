{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XlixIIotok1-"
      },
      "source": [
        "# 0. Librerías y paquetes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QmCEf53bjD8X",
        "outputId": "8e6a3516-f864-4f93-94c2-a25e4f87b27f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting adjustText\n",
            "  Downloading adjustText-1.1.1-py3-none-any.whl (11 kB)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from adjustText) (1.25.2)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from adjustText) (3.7.1)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from adjustText) (1.11.4)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (1.2.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (4.50.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (24.0)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (9.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (3.1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->adjustText) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->adjustText) (1.16.0)\n",
            "Installing collected packages: adjustText\n",
            "Successfully installed adjustText-1.1.1\n",
            "Collecting fuzzywuzzy\n",
            "  Downloading fuzzywuzzy-0.18.0-py2.py3-none-any.whl (18 kB)\n",
            "Installing collected packages: fuzzywuzzy\n",
            "Successfully installed fuzzywuzzy-0.18.0\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning\n",
            "  warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting kaleido\n",
            "  Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.9/79.9 MB\u001b[0m \u001b[31m9.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: kaleido\n",
            "Successfully installed kaleido-0.2.1\n"
          ]
        }
      ],
      "source": [
        "### Imports: Libraries and Packages ###\n",
        "\n",
        "import os\n",
        "import math\n",
        "import numpy as np\n",
        "from IPython.display import display, HTML\n",
        "from IPython.utils import io\n",
        "from matplotlib import pyplot as plt\n",
        "from sklearn.decomposition import PCA\n",
        "import pandas as pd\n",
        "import gensim\n",
        "from gensim.test.utils import common_texts\n",
        "from gensim.models import Word2Vec\n",
        "from gensim.models.word2vec import LineSentence\n",
        "import gensim.downloader as api\n",
        "from gensim.models import KeyedVectors\n",
        "import urllib.request\n",
        "import shutil\n",
        "import random\n",
        "from copy import deepcopy\n",
        "from collections import Counter\n",
        "import spacy\n",
        "from scipy.stats import pearsonr, spearmanr\n",
        "from scipy import spatial\n",
        "import pickle\n",
        "try:\n",
        "  from adjustText import adjust_text\n",
        "except:\n",
        "  !pip install adjustText\n",
        "  from adjustText import adjust_text\n",
        "\n",
        "\n",
        "# Fuzzy search box for the object prototype keys\n",
        "from ipywidgets import interact, widgets\n",
        "!pip install fuzzywuzzy\n",
        "from fuzzywuzzy import process\n",
        "\n",
        "# 3D visualization\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# Clustering\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import silhouette_score\n",
        "from sklearn.neighbors import NearestNeighbors\n",
        "\n",
        "# Save plots as a video\n",
        "!pip install kaleido\n",
        "import imageio.v2 as imageio\n",
        "\n",
        "#import torch\n",
        "\n",
        "#import torch.nn.functional as F\n",
        "#from torch import nn"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Gq3MFCvrui7E"
      },
      "source": [
        "# 1. Descarga y carga del modelo de semántica distribucional: FastText en español"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wXwol51QYkZ1"
      },
      "source": [
        "Vamos a usar los vectores de palabras preentrenados de FastText. Tienen disponibles versiones para 157 lenguas, entrenados con un corpus enorme procedente del vaciado de Common Crawl y Wikipedia. Estos vectores tienen 300 dimensiones. Aquí vamos a usar los del español. Se puede limitar la carga a un cierto número de tokens aleatorios para un coste computacional menor. Aun así, aquí usaremos el modelo completo sin limitar (2 millones de tokens) para obtener los resultados más exactos posibles. Otra opción popular que podríamos usar son los vectores de GloVe. La motivación para elegir FastText es que es un modelo más reciente que GloVe. Tiene algunas ventajas, y seguramente la más notable sea que tiene la capacidad de aprender vectores para palabras nuevas que no ha visto en el dataset de entrenamiento."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "05UYbWfQXXvG"
      },
      "outputs": [],
      "source": [
        "### Modelo de semántica distribucional: vectores de FastText en formato Word2Vec ###\n",
        "\n",
        "dsm_file = 'cc.es.300.vec.gz'\n",
        "if not os.path.exists(dsm_file):\n",
        "  with io.capture_output() as captured:\n",
        "    !wget 'https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.es.300.vec.gz' ;\n",
        "\n",
        "# Cargamos los vectores de FastText en español sin límite de palabras (el modelo completo)\n",
        "ds_model = gensim.models.KeyedVectors.load_word2vec_format(dsm_file)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "euJrcCKl6zFq"
      },
      "source": [
        "# 2. Funciones auxiliares"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "ZjZ2Esz2u9Y8"
      },
      "outputs": [],
      "source": [
        "### Función para la visualización en 2D ###\n",
        "\n",
        "def visualize(list_of_words, space, domain_dict):\n",
        "  # Create a color map\n",
        "  domains = set(domain_dict.values())\n",
        "  colors = ['red', 'blue', 'green', 'black', 'pink', 'purple', 'yellow']\n",
        "  color_map = {domain: color for domain, color in zip(domains, colors)}\n",
        "\n",
        "  # Initialize plot\n",
        "  fig, ax = plt.subplots(figsize=(8, 5))\n",
        "\n",
        "  texts = []\n",
        "  legend_labels = {}\n",
        "\n",
        "  for word in list_of_words:\n",
        "    x = space[word][0]\n",
        "    y = space[word][1]\n",
        "\n",
        "    # Get the domain and corresponding color for each word\n",
        "    domain = domain_dict[word]\n",
        "    color = color_map[domain]\n",
        "\n",
        "    # Plot the word's position as a dot, colored by its domain\n",
        "    ax.scatter(x, y, color=color, s=8)\n",
        "\n",
        "    # Annotate the dot with the word\n",
        "    #texts.append(ax.annotate(word, xy=(x, y), fontsize=9))\n",
        "\n",
        "    # Add to legend labels (if not already added)\n",
        "    if domain not in legend_labels:\n",
        "        legend_labels[domain] = color\n",
        "\n",
        "  # Adjust text to avoid overlapping\n",
        "  adjust_text(texts)\n",
        "\n",
        "  # Add legend\n",
        "  handles = [plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=color, markersize=10) for color in legend_labels.values()]\n",
        "  ax.legend(handles, legend_labels.keys(), title='Vecindarios')\n",
        "\n",
        "  plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "1M59rUEbvD5F"
      },
      "outputs": [],
      "source": [
        "### Función para la visualización en 3D permitiendo la interacción con plotly ###\n",
        "\n",
        "def visualize_3d_interactive(list_of_words, space, domain_dict, plot_name):\n",
        "    domains = set(domain_dict.values())\n",
        "    colors = ['red', 'blue', 'green', 'black', 'pink', 'purple', 'yellow']\n",
        "    color_map = {domain: color for domain, color in zip(domains, colors)}\n",
        "\n",
        "    # Instead of a matplotlib figure, we create a plotly one\n",
        "    fig = go.Figure()\n",
        "\n",
        "    min_x = None\n",
        "    min_y = None\n",
        "    min_z = None\n",
        "    max_x = None\n",
        "    max_y = None\n",
        "    max_z = None\n",
        "    for word in list_of_words:\n",
        "        x = space[word][0]\n",
        "        y = space[word][1]\n",
        "        z = space[word][2]\n",
        "\n",
        "        if max_x is None or x > max_x:\n",
        "          max_x = x\n",
        "\n",
        "        if max_y is None or y > max_y:\n",
        "          max_y = y\n",
        "\n",
        "        if max_z is None or z > max_z:\n",
        "          max_z = z\n",
        "\n",
        "        if min_x is None or x < min_x:\n",
        "          min_x = x\n",
        "\n",
        "        if min_y is None or y < min_y:\n",
        "          min_y = y\n",
        "\n",
        "        if min_z is None or z < min_z:\n",
        "          min_z = z\n",
        "\n",
        "        domain = domain_dict[word]\n",
        "        color = color_map[domain]\n",
        "\n",
        "        # Plot the word's position as a scatter point, colored by its domain\n",
        "        fig.add_trace(go.Scatter3d(x=[x], y=[y], z=[z], mode='markers',\n",
        "                                   marker=dict(size=5, color=color), text=[word], textposition=\"top center\", showlegend=False))\n",
        "\n",
        "    # Add the legend\n",
        "    for domain, color in color_map.items():\n",
        "        fig.add_trace(go.Scatter3d(x=[None], y=[None], z=[None], mode='markers+text',\n",
        "                                   marker=dict(size=5, color=color), text=[domain], legendgroup=domain, name=domain))\n",
        "\n",
        "    # Show a bounding box around the points, with enough space to show all\n",
        "    # of them (otherwise they collide with the 'walls')\n",
        "    #fig.update_layout(scene=dict(aspectmode='cube'))\n",
        "    fig.update_layout(scene=dict(\n",
        "        xaxis=dict(range=[min_x - 0.5*max_x, max_x + 0.5*max_x]),\n",
        "        yaxis=dict(range=[min_y - 0.5*max_y, max_y + 0.5*max_y]),\n",
        "        zaxis=dict(range=[min_z - 0.5*max_z, max_z + 0.5*max_z]),\n",
        "        aspectmode='cube'\n",
        "    ))\n",
        "    fig.show()\n",
        "\n",
        "    # Save it as a video (for the presentation)\n",
        "    #frames = []\n",
        "    #num_frames = 120\n",
        "\n",
        "    #for i in range(num_frames):\n",
        "        # Update the camera angle for each frame\n",
        "        #theta = np.deg2rad(45) + (i / num_frames) * 2 * 3.14159  # Starting from a 45-degree angle\n",
        "        #fig.update_layout(scene_camera=dict(eye=dict(x=1.25*np.cos(theta), y=1.25*np.sin(theta), z=0.4)))\n",
        "\n",
        "        #img_bytes = fig.to_image(format=\"png\")\n",
        "        #img = imageio.imread(img_bytes)\n",
        "\n",
        "        #frames.append(img)\n",
        "\n",
        "    #imageio.mimsave(f'{plot_name}.gif', frames, format='GIF')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4jROig4Rvi94"
      },
      "source": [
        "# 3. Extracción de vecindarios semánticos para las categorías seleccionadas usando FastText"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5BqwqCzwyTNm"
      },
      "source": [
        "Podemos acceder al vocabulario del modelo:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2Z-Ts6k2qX9P",
        "outputId": "bcf26706-5bda-470f-db17-7b6f42a30774"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "El modelo cubre 2000000 palabras\n"
          ]
        }
      ],
      "source": [
        "# Acceso a la lista de palabras para las que el modelo tiene vectores\n",
        "words_covered = list(ds_model.index_to_key)\n",
        "vocabulary_size = len(words_covered)\n",
        "print('El modelo cubre', vocabulary_size, 'palabras')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ULqTE5OQsgi9",
        "outputId": "77b5c13b-3441-4f85-ae7a-078153e6c892"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "\"romanticismo\" in words_covered"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yeRKNQ3mypYH"
      },
      "source": [
        "También podemos acceder al vector de la palabra que queramos:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iNAR9IFWsXhW",
        "outputId": "dc42c734-daa4-4ba1-d0e1-6956de43aea6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "El vector de ordenador tiene 300 dimensiones\n",
            "\n",
            "Dimensiones del vector de ordenador :\n",
            "[ 0.0246 -0.0294  0.0192  0.0067 -0.0213 -0.0101 -0.0049  0.0193 -0.014\n",
            "  0.006   0.0346 -0.004  -0.0364  0.0047 -0.054  -0.0368 -0.0002  0.0138\n",
            " -0.0307 -0.0061 -0.054   0.0234  0.0217 -0.0261 -0.0226  0.0092 -0.0085\n",
            "  0.0374 -0.0046 -0.0453  0.0208  0.0827  0.0248 -0.017   0.024   0.0359\n",
            "  0.0083  0.023  -0.0031  0.0014 -0.0288 -0.0192  0.002  -0.0004 -0.0083\n",
            "  0.0784  0.0393  0.0238  0.0138 -0.0401  0.0337 -0.0103  0.0387 -0.0132\n",
            "  0.0224  0.007   0.0201 -0.0188 -0.0061 -0.0045  0.0204  0.0805 -0.0354\n",
            "  0.0399 -0.0289 -0.0204  0.0076  0.033   0.0157 -0.0422 -0.0057  0.0278\n",
            "  0.0504  0.0435 -0.0218 -0.0063  0.0052 -0.034  -0.0064 -0.0385  0.0072\n",
            " -0.0131 -0.0004  0.0069 -0.025   0.064   0.0377 -0.0083  0.0194 -0.0277\n",
            "  0.0063  0.0182  0.0108 -0.029   0.0187  0.015   0.0326 -0.0021 -0.0096\n",
            "  0.0058 -0.0505  0.0207 -0.0069 -0.0361  0.0016 -0.0186  0.009   0.0556\n",
            " -0.0223  0.0462 -0.0041  0.009   0.0013  0.0351  0.0075  0.0672 -0.0009\n",
            " -0.0053 -0.0046  0.0207  0.0408 -0.0285  0.0233 -0.0461 -0.0505 -0.0347\n",
            " -0.0424  0.0046 -0.0185  0.02   -0.0272  0.0555 -0.0235  0.0379  0.0418\n",
            "  0.0226 -0.0014 -0.0266  0.0434  0.0157  0.0359  0.0075 -0.0279  0.0107\n",
            " -0.0391 -0.0356  0.0152  0.002  -0.0067 -0.0225  0.0176  0.0426 -0.0122\n",
            " -0.0363 -0.0249  0.0115  0.0044 -0.0314 -0.0044  0.0381 -0.0345 -0.0186\n",
            " -0.0074 -0.0458  0.0332 -0.0039  0.0096 -0.0418  0.0478 -0.0375  0.0286\n",
            " -0.0294 -0.0483 -0.0138  0.006   0.005   0.0273 -0.02    0.0068  0.0014\n",
            "  0.0104 -0.005   0.0221  0.0699  0.0056 -0.01   -0.06    0.0364 -0.0159\n",
            " -0.0281  0.0048 -0.0068 -0.0086 -0.0055  0.0172  0.0109  0.0012  0.0431\n",
            " -0.0211  0.0374 -0.0444  0.0311 -0.0555  0.0422 -0.0453  0.0197 -0.0353\n",
            " -0.0763 -0.0192  0.0265 -0.0293  0.0138  0.0174 -0.0241 -0.0106  0.0089\n",
            " -0.0041 -0.0008 -0.0102 -0.0063  0.0087  0.0135 -0.0016  0.0155 -0.051\n",
            " -0.0073  0.0009  0.0377  0.0592  0.009  -0.0582 -0.0392 -0.0007 -0.0031\n",
            " -0.0497  0.0017  0.0172  0.0154 -0.0308 -0.0115 -0.016   0.0293  0.0182\n",
            " -0.0117 -0.0133 -0.0191  0.0156  0.0581 -0.0086 -0.0177  0.0438 -0.0309\n",
            "  0.0371  0.017   0.0584 -0.008   0.008   0.0757  0.032   0.0005  0.0461\n",
            " -0.0273 -0.0241 -0.0487 -0.0114  0.0545 -0.0502 -0.0454 -0.0223 -0.0137\n",
            "  0.0329  0.006   0.0034 -0.0633 -0.037  -0.0554  0.0257 -0.0503  0.0391\n",
            " -0.0044  0.0094  0.0243 -0.0057  0.0686 -0.0068 -0.0035 -0.0348 -0.0785\n",
            "  0.0354  0.005  -0.0178 -0.048   0.0095  0.0302 -0.0778 -0.0096  0.0037\n",
            " -0.0353  0.0082 -0.0258]\n"
          ]
        }
      ],
      "source": [
        "word = 'ordenador'\n",
        "# Acceso al vector de la palabra especificada\n",
        "word_vector = ds_model[word]\n",
        "\n",
        "length_of_vector = len(word_vector)\n",
        "\n",
        "print('El vector de', word, 'tiene', length_of_vector, 'dimensiones')\n",
        "print()\n",
        "print('Dimensiones del vector de', word,':')\n",
        "print(word_vector)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VG8TeCe3zC71"
      },
      "source": [
        "Podemos computar la similitud coseno de dos palabras dadas. La similitud coseno es una forma de medir la distancia entre dos vectores, y es la medida que utilizaremos para nuestro análisis. La distancia euclídea es computacionalmente mucho más costosa, así que es más apropriado utilizar la similitud coseno si queremos calcular recursivamente la distancia entre vectores. Cuanto mayor sea la similitud coseno, más cerca estarán esos vectores, lo que a su vez significa que las palabras representadas por esos vectores tienen más relación entre ellas, normalmente significando que pertenecen al mismo campo o vecindario semántico. Dicho de otro modo y siguiendo el paradigma de la semántica distribucional, si dos palabras determinadas aparecen a menudo en contextos similares, entonces sus vectores estarán más cerca en el espacio."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A_KTfKRisrkW",
        "outputId": "f71bdd86-e0fd-46d8-e5a0-24d9d8c05d98"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "La similitud coseno entre teclado y ordenador es 0.5751741\n",
            "\n",
            "La similitud coseno entre metafísica y ordenador es 0.13585053\n"
          ]
        }
      ],
      "source": [
        "# Cálculo de la similitud coseno de dos palabras dadas\n",
        "word_1 = \"teclado\"\n",
        "word_2 = \"ordenador\"\n",
        "word_3 = \"metafísica\"\n",
        "\n",
        "similitud_1 = ds_model.similarity(word_1, word_2)\n",
        "similitud_2 = ds_model.similarity(word_3, word_2)\n",
        "print('La similitud coseno entre', word_1,'y', word_2,'es', similitud_1)\n",
        "print()\n",
        "print('La similitud coseno entre', word_3,'y', word_2,'es', similitud_2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v5JERoO00XZq"
      },
      "source": [
        "Decimos que una palabra 'x' es el vecino más cercano de otra palabra 'y' cuando el vector de 'x' es el más cercano al vector de 'y' en el espacio."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i9GFTA4gswMJ",
        "outputId": "56060954-031a-44aa-ce04-6c35c5cc463d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[('filosófica', 0.7927559018135071),\n",
              " ('ontológica', 0.7450382709503174),\n",
              " ('ontoteológica', 0.73431795835495),\n",
              " ('gnoseológica', 0.7297401428222656),\n",
              " ('fenomenología', 0.7196477651596069),\n",
              " ('meta-física', 0.7190386056900024),\n",
              " ('ontología', 0.717137336730957),\n",
              " ('filosofía', 0.7080803513526917)]"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "# Vecinos más cercanos (vectores de palabras más cercanos)\n",
        "ds_model.most_similar('metafísica', topn = 8)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "emAIioCgzNKJ"
      },
      "source": [
        "### 3.1. Área del discurso cuya importancia ha crecido: tecnología y ciencias"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LJB6prw728fe"
      },
      "source": [
        "Escogemos 20 términos (que no sean neologismos) de un área del discurso cuya importancia ha crecido en los últimos años, es decir, cuya frecuencia haya aumentado. En este caso, el área elegida es el de la tecnología y las ciencias \"exactas\".\n",
        "\n",
        "Calculamos los 50 vecinos más cercanos para cada uno de los 20 términos seleccionados."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dTkiZCHZxfcp",
        "outputId": "c6c5cdda-a7b7-4848-b99e-aca75d9cbd0a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vecinos más cercanos de 'tecnología':\n",
            "('técnología', 0.7790051102638245)\n",
            "('teconología', 0.7775272130966187)\n",
            "('tecnologia', 0.7449069619178772)\n",
            "('tecnlogía', 0.7364124059677124)\n",
            "('tegnología', 0.7362803220748901)\n",
            "('tecnologías', 0.7158141136169434)\n",
            "('latecnología', 0.7150928974151611)\n",
            "('tecnología.La', 0.7102969884872437)\n",
            "('tecnolgía', 0.7045336365699768)\n",
            "('tecnológia', 0.6972599029541016)\n",
            "('detecnología', 0.6927072405815125)\n",
            "('tecnológica', 0.6907385587692261)\n",
            "('tecnológía', 0.6836246848106384)\n",
            "('tecnologíade', 0.6812968850135803)\n",
            "('técnologia', 0.6786707639694214)\n",
            "('tecnología.El', 0.6655758023262024)\n",
            "('tenología', 0.6551815271377563)\n",
            "('microtecnología', 0.651773989200592)\n",
            "('Tecnología', 0.6485230922698975)\n",
            "('-tecnología', 0.6415195465087891)\n",
            "('nanotecnología', 0.6407207250595093)\n",
            "('tecnlogia', 0.6406164765357971)\n",
            "('tecnología.En', 0.6370444893836975)\n",
            "('tegnologia', 0.6292250156402588)\n",
            "('nano-tecnología', 0.6288203597068787)\n",
            "('innovación', 0.6288013458251953)\n",
            "('tecnoligía', 0.6213909387588501)\n",
            "('tecnoligia', 0.6213253736495972)\n",
            "('biotecnología', 0.6206957101821899)\n",
            "('technología', 0.6173065304756165)\n",
            "('tecnólogia', 0.6152446269989014)\n",
            "('tecnologíca', 0.6145504713058472)\n",
            "('técnológica', 0.6103051900863647)\n",
            "('infotecnología', 0.6091927289962769)\n",
            "('tecnolog', 0.6087219715118408)\n",
            "('bio-tecnología', 0.6080517172813416)\n",
            "('robótica', 0.6002885103225708)\n",
            "('microelectrónica', 0.5992389917373657)\n",
            "('ciencia', 0.5979543924331665)\n",
            "('tecnologí', 0.5955401659011841)\n",
            "('tencología', 0.5954799652099609)\n",
            "('teconologia', 0.5922307968139648)\n",
            "('agrotecnología', 0.5897462964057922)\n",
            "('tecnología.Es', 0.5875845551490784)\n",
            "('innovadora', 0.5857143402099609)\n",
            "('supertecnología', 0.5843625664710999)\n",
            "('tecnología.A', 0.5834735631942749)\n",
            "('informática', 0.5831882953643799)\n",
            "('tecnología.', 0.582208514213562)\n",
            "('tecnólogica', 0.57550448179245)\n",
            "\n",
            "Vecinos más cercanos de 'ordenador':\n",
            "('computador', 0.7355086803436279)\n",
            "('computadora', 0.724625825881958)\n",
            "('ordenata', 0.704185962677002)\n",
            "('portátil', 0.6846269369125366)\n",
            "('Ordenador', 0.6647582650184631)\n",
            "('portatil', 0.657183051109314)\n",
            "('ordenadores', 0.6535745859146118)\n",
            "('ordenador.El', 0.641829252243042)\n",
            "('ordenador.', 0.617987334728241)\n",
            "('odenador', 0.6117261052131653)\n",
            "('ordenador.Y', 0.6036109924316406)\n",
            "('ordenador.En', 0.5945517420768738)\n",
            "('ordendor', 0.5884181261062622)\n",
            "('ordenadore', 0.5851505994796753)\n",
            "('pórtatil', 0.5843937397003174)\n",
            "('informático', 0.5808929800987244)\n",
            "('elordenador', 0.5789341330528259)\n",
            "('teclado', 0.57517409324646)\n",
            "('ordenador.La', 0.5621578693389893)\n",
            "('tablet', 0.5619608163833618)\n",
            "('unordenador', 0.5600553154945374)\n",
            "('portáti', 0.5593631863594055)\n",
            "('escritorio', 0.5562562942504883)\n",
            "('televisor', 0.5488670468330383)\n",
            "('miniordenador', 0.5477460026741028)\n",
            "('ordenador.Este', 0.5447526574134827)\n",
            "('portátil.El', 0.543325662612915)\n",
            "('compu', 0.5428333282470703)\n",
            "('mini-ordenador', 0.5415402054786682)\n",
            "('ordenador.Un', 0.5398858785629272)\n",
            "('ordenador.A', 0.5391197800636292)\n",
            "('monitor', 0.5381780862808228)\n",
            "('Computador', 0.5292887687683105)\n",
            "('computadora.El', 0.5279107093811035)\n",
            "('videoconsola', 0.5271596312522888)\n",
            "('miniportátil', 0.5255829691886902)\n",
            "('oredenador', 0.5255593061447144)\n",
            "('portátil.', 0.5219190120697021)\n",
            "('ordenador.Es', 0.520555317401886)\n",
            "('táblet', 0.5205510854721069)\n",
            "('pendrive', 0.5187897682189941)\n",
            "('ordenador.Lo', 0.5178126692771912)\n",
            "('minipc', 0.5145419836044312)\n",
            "('pc', 0.5126180052757263)\n",
            "('miniportatil', 0.5116837024688721)\n",
            "('ORDENADOR', 0.5099107623100281)\n",
            "('ordenador.Pero', 0.5089306831359863)\n",
            "('micro-ordenador', 0.5086919665336609)\n",
            "('super-ordenador', 0.5074316263198853)\n",
            "('módem', 0.5060763955116272)\n",
            "\n",
            "Vecinos más cercanos de 'software':\n",
            "('sofware', 0.7840551137924194)\n",
            "('hardware', 0.7632315158843994)\n",
            "('desoftware', 0.7514280080795288)\n",
            "('Software', 0.7441298961639404)\n",
            "('softaware', 0.741661012172699)\n",
            "('sotware', 0.7131227254867554)\n",
            "('sotfware', 0.6987821459770203)\n",
            "('softwares', 0.6908961534500122)\n",
            "('software.El', 0.6857371926307678)\n",
            "('software.La', 0.6773847341537476)\n",
            "('software-hardware', 0.659635603427887)\n",
            "('Sofware', 0.6562319397926331)\n",
            "('Sotfware', 0.6557886004447937)\n",
            "('software.-', 0.6451598405838013)\n",
            "('software.', 0.6381717920303345)\n",
            "('softwar', 0.6374284625053406)\n",
            "('Hadware', 0.6369399428367615)\n",
            "('oftware', 0.6368827223777771)\n",
            "('.Software', 0.6300170421600342)\n",
            "('software.En', 0.6248791217803955)\n",
            "('softwareSoftware', 0.6229877471923828)\n",
            "('hadware', 0.6216968894004822)\n",
            "('softare', 0.6201774477958679)\n",
            "('Sotware', 0.6181750893592834)\n",
            "('hardware-software', 0.6160610914230347)\n",
            "('harware', 0.6117215752601624)\n",
            "('softwareLa', 0.6113476157188416)\n",
            "('open-source', 0.600027322769165)\n",
            "('-Software', 0.5989440083503723)\n",
            "('informático', 0.5937243700027466)\n",
            "('OpenSource', 0.5936319231987)\n",
            "('freeware', 0.5907686948776245)\n",
            "('hardware.', 0.5830017328262329)\n",
            "('screencasting', 0.5813325643539429)\n",
            "('softwarepara', 0.5809454917907715)\n",
            "('middleware', 0.5780088901519775)\n",
            "('opensource', 0.5764937400817871)\n",
            "('hardaware', 0.5749803781509399)\n",
            "('elsoftware', 0.5738261342048645)\n",
            "('Open-source', 0.5723893642425537)\n",
            "('programario', 0.5683789253234863)\n",
            "('sistemaoperativo', 0.5682631731033325)\n",
            "('WindowsSoftware', 0.568001389503479)\n",
            "('softwarelibre', 0.5660834312438965)\n",
            "('sofwares', 0.5655899047851562)\n",
            "('software-libre', 0.5647997856140137)\n",
            "('software-as-a-service', 0.5636280179023743)\n",
            "('desarrolador', 0.5620829463005066)\n",
            "('osoftware', 0.5602807998657227)\n",
            "('--software', 0.5598253607749939)\n",
            "\n",
            "Vecinos más cercanos de 'hardware':\n",
            "('software', 0.7632315754890442)\n",
            "('hardware.', 0.7325707077980042)\n",
            "('harware', 0.7241576910018921)\n",
            "('hadware', 0.7214325070381165)\n",
            "('software-hardware', 0.7106683254241943)\n",
            "('Hardware', 0.7060856819152832)\n",
            "('hardware-software', 0.6989147067070007)\n",
            "('hardwares', 0.6980087757110596)\n",
            "('hardaware', 0.6654741764068604)\n",
            "('softaware', 0.6493715047836304)\n",
            "('hardwar', 0.6451902985572815)\n",
            "('Hadware', 0.6331779956817627)\n",
            "('software.El', 0.6217337250709534)\n",
            "('hardware-', 0.6126739978790283)\n",
            "('chipset', 0.6072957515716553)\n",
            "('sofware', 0.6062095761299133)\n",
            "('open-hardware', 0.5984328389167786)\n",
            "('CPU', 0.596552848815918)\n",
            "('sotware', 0.5933426022529602)\n",
            "('software.La', 0.5930696725845337)\n",
            "('hardw', 0.5906748175621033)\n",
            "('firmware', 0.5887889266014099)\n",
            "('chipsets', 0.5787563323974609)\n",
            "('kernel', 0.5767689347267151)\n",
            "('monoprocesador', 0.5750700235366821)\n",
            "('software.', 0.5750295519828796)\n",
            "('sistemaoperativo', 0.5748107433319092)\n",
            "('software.En', 0.5728434324264526)\n",
            "('sotfware', 0.571474552154541)\n",
            "('fireware', 0.5710045695304871)\n",
            "('microcomputador', 0.5694802403450012)\n",
            "('hackintosh', 0.5693798661231995)\n",
            "('drivers', 0.5686305165290833)\n",
            "('desoftware', 0.5662825703620911)\n",
            "('procesador', 0.5662099719047546)\n",
            "('Harware', 0.563440203666687)\n",
            "('softswitch', 0.560061514377594)\n",
            "('microprocesador', 0.5599793791770935)\n",
            "('microcomputadores', 0.5588107705116272)\n",
            "('software.-', 0.5587375164031982)\n",
            "('OpenRISC', 0.5575286149978638)\n",
            "('driver', 0.5535988211631775)\n",
            "('microprocesadores', 0.5512633919715881)\n",
            "('ordenadore', 0.5503839254379272)\n",
            "('multiprocesador', 0.5484941601753235)\n",
            "('--software', 0.5471998453140259)\n",
            "('kernell', 0.5470069646835327)\n",
            "('hypervisor', 0.5468145608901978)\n",
            "('softwareLa', 0.5465453267097473)\n",
            "('trackpoint', 0.5457988381385803)\n",
            "\n",
            "Vecinos más cercanos de 'internet':\n",
            "('Internet', 0.8405499458312988)\n",
            "('intenet', 0.7771608829498291)\n",
            "('internet.Y', 0.7346475720405579)\n",
            "('interner', 0.7292342185974121)\n",
            "('internet.A', 0.7157486081123352)\n",
            "('internet.', 0.7099387645721436)\n",
            "('Internet.Y', 0.6935162544250488)\n",
            "('interntet', 0.6921713352203369)\n",
            "('internety', 0.6869869828224182)\n",
            "('internet.El', 0.6839357018470764)\n",
            "('internet.Al', 0.6833247542381287)\n",
            "('internetEn', 0.6766016483306885)\n",
            "('internet.Lo', 0.6756854057312012)\n",
            "('internete', 0.673456609249115)\n",
            "('internet.Pero', 0.6679553389549255)\n",
            "('internet.La', 0.6651276350021362)\n",
            "('internet.Así', 0.65840083360672)\n",
            "('internet.De', 0.657954216003418)\n",
            "('internet.Además', 0.6508049368858337)\n",
            "('internét', 0.6498463749885559)\n",
            "('internet.Yo', 0.6477012038230896)\n",
            "('Internet.A', 0.6474822759628296)\n",
            "('Intenet', 0.6372687220573425)\n",
            "('Internet.', 0.6357396245002747)\n",
            "('internet.En', 0.6310148239135742)\n",
            "('Internet.Al', 0.6303936243057251)\n",
            "('lnternet', 0.6290833950042725)\n",
            "('internetNo', 0.6260039210319519)\n",
            "('internetz', 0.6248961687088013)\n",
            "('deinternet', 0.6232247352600098)\n",
            "('internet.Me', 0.6203573346138)\n",
            "('internet.-', 0.6174501776695251)\n",
            "('internet.Sin', 0.6173314452171326)\n",
            "('internet.Por', 0.6159201860427856)\n",
            "('internet.Si', 0.6153916716575623)\n",
            "('Internet.De', 0.613758385181427)\n",
            "('Internet.Así', 0.6133463978767395)\n",
            "('Internet.Lo', 0.6112418174743652)\n",
            "('interenet', 0.6104509830474854)\n",
            "('internt', 0.6069872975349426)\n",
            "('internett', 0.6067938804626465)\n",
            "('internert', 0.6063626408576965)\n",
            "('Interner', 0.6033291816711426)\n",
            "('Internety', 0.602486789226532)\n",
            "('internet.No', 0.6021067500114441)\n",
            "('Internet.Pero', 0.6019373536109924)\n",
            "('internte', 0.6002683639526367)\n",
            "('internet.También', 0.5998921394348145)\n",
            "('internet3', 0.5986868143081665)\n",
            "('internetEl', 0.597939133644104)\n",
            "\n",
            "Vecinos más cercanos de 'programación':\n",
            "('Programación', 0.7488003969192505)\n",
            "('programacion', 0.748222291469574)\n",
            "('laprogramación', 0.6998667120933533)\n",
            "('progamación', 0.6965907216072083)\n",
            "('programación.La', 0.6541932821273804)\n",
            "('progrmación', 0.653171718120575)\n",
            "('programaci', 0.6461066007614136)\n",
            "('programción', 0.6459811329841614)\n",
            "('deprogramación', 0.6450992822647095)\n",
            "('programaciones', 0.6401180624961853)\n",
            "('programación.El', 0.6190821528434753)\n",
            "('programación.En', 0.6131544709205627)\n",
            "('microprogramación', 0.6125010251998901)\n",
            "('programación.', 0.6100088357925415)\n",
            "('programación-', 0.6053178310394287)\n",
            "('naturla', 0.599247932434082)\n",
            "('programaciòn', 0.5955636501312256)\n",
            "('contraprogramación', 0.5883303284645081)\n",
            "('programacio', 0.5851138830184937)\n",
            "('Programacion', 0.5832751989364624)\n",
            "('programación.-', 0.5810556411743164)\n",
            "('Metaprogramación', 0.5762397646903992)\n",
            "('programar', 0.5759344696998596)\n",
            "('re-programación', 0.5680243968963623)\n",
            "('-Programación', 0.5607951283454895)\n",
            "('.Programación', 0.5483087301254272)\n",
            "('autoprogramación', 0.5480358600616455)\n",
            "('metaprogramación', 0.5449967384338379)\n",
            "('programando', 0.5420854687690735)\n",
            "('programa', 0.5407180190086365)\n",
            "('programcion', 0.5371321439743042)\n",
            "('programació', 0.536554217338562)\n",
            "('programador', 0.5316842198371887)\n",
            "('programan', 0.5288281440734863)\n",
            "('progrmacion', 0.5267136096954346)\n",
            "('neuro-lingüística', 0.5250628590583801)\n",
            "('programacin', 0.5243103504180908)\n",
            "('programaciónProgramación', 0.5231255888938904)\n",
            "('gramación', 0.5171956419944763)\n",
            "('programadora', 0.5141494870185852)\n",
            "('programaba', 0.5131621956825256)\n",
            "('lenguajes', 0.5121896862983704)\n",
            "('grilla', 0.5116778612136841)\n",
            "('programadores', 0.5091037154197693)\n",
            "('planificación', 0.508487343788147)\n",
            "('programará', 0.5067796111106873)\n",
            "('programara', 0.5050827264785767)\n",
            "('programarla', 0.5049474239349365)\n",
            "('algoritmia', 0.5019171237945557)\n",
            "('progamacion', 0.5018041133880615)\n",
            "\n",
            "Vecinos más cercanos de 'informática':\n",
            "('informatica', 0.7372714281082153)\n",
            "('Informática', 0.7100356221199036)\n",
            "('computación', 0.707991898059845)\n",
            "('infomática', 0.6938846111297607)\n",
            "('teleinformática', 0.6586896777153015)\n",
            "('informáticos', 0.6582379341125488)\n",
            "('informáticas', 0.6563766598701477)\n",
            "('microinformática', 0.6513156890869141)\n",
            "('informática.La', 0.6426995992660522)\n",
            "('informático', 0.6419392824172974)\n",
            "('cibernética', 0.6317107677459717)\n",
            "('informática.', 0.6261098384857178)\n",
            "('informática.-', 0.6208088994026184)\n",
            "('informática-', 0.6201173067092896)\n",
            "('informática.En', 0.6184224486351013)\n",
            "('tecnológica', 0.6096810102462769)\n",
            "('electrónica', 0.6087709665298462)\n",
            "('Microinformática', 0.601754367351532)\n",
            "('ingeniería', 0.5992438197135925)\n",
            "('informàtica', 0.5865198373794556)\n",
            "('tecnología', 0.5831883549690247)\n",
            "('robótica', 0.5802196264266968)\n",
            "('informátic', 0.5784052014350891)\n",
            "('informática.El', 0.5774505734443665)\n",
            "('ofimática', 0.5761606097221375)\n",
            "('ordenadores', 0.5706050992012024)\n",
            "('retroinformática', 0.5680657029151917)\n",
            "('Infomática', 0.5638946294784546)\n",
            "('criptografía', 0.5593450665473938)\n",
            "('técnológica', 0.5584918856620789)\n",
            "('informáti', 0.5572147369384766)\n",
            "('computacional', 0.5549235343933105)\n",
            "('técnología', 0.5536838173866272)\n",
            "('telecomunicaciones', 0.5535787343978882)\n",
            "('Informatica', 0.5520076751708984)\n",
            "('computacion', 0.5514661073684692)\n",
            "('criptología', 0.5483829975128174)\n",
            "('infórmatica', 0.5467256307601929)\n",
            "('ciberseguridad', 0.5423644185066223)\n",
            "('cybernética', 0.5403944849967957)\n",
            "('mecanografía', 0.5403764843940735)\n",
            "('informaticas', 0.540038526058197)\n",
            "('Computación', 0.5396213531494141)\n",
            "('computadoras', 0.5380560755729675)\n",
            "('telecomunicación', 0.537041425704956)\n",
            "('informaticos', 0.5363268256187439)\n",
            "('internética', 0.5361007452011108)\n",
            "('informatización', 0.5345882773399353)\n",
            "('software', 0.5279478430747986)\n",
            "('informatico', 0.5275697708129883)\n",
            "\n",
            "Vecinos más cercanos de 'robótica':\n",
            "('robotica', 0.7811441421508789)\n",
            "('Robótica', 0.7594022154808044)\n",
            "('Robotica', 0.6627007126808167)\n",
            "('robótico', 0.6372221112251282)\n",
            "('robots', 0.6208114624023438)\n",
            "('robóticas', 0.6207023859024048)\n",
            "('mecatrónica', 0.6020057797431946)\n",
            "('robot', 0.6017449498176575)\n",
            "('tecnología', 0.6002885103225708)\n",
            "('robóticos', 0.5963138341903687)\n",
            "('nanotecnología', 0.5917289853096008)\n",
            "('robotizada', 0.584399402141571)\n",
            "('microtecnología', 0.5814951062202454)\n",
            "('informática', 0.5802196264266968)\n",
            "('bioingeniería', 0.5743815302848816)\n",
            "('bioelectrónica', 0.5650548338890076)\n",
            "('neurotecnología', 0.5650027394294739)\n",
            "('nanotecnológica', 0.5622915029525757)\n",
            "('robotización', 0.5585980415344238)\n",
            "('tecnológica', 0.5573055744171143)\n",
            "('biónica', 0.5555214881896973)\n",
            "('Robocup', 0.554754376411438)\n",
            "('microelectrónica', 0.5543864965438843)\n",
            "('Robotix', 0.5518792271614075)\n",
            "('cibernética', 0.5501415729522705)\n",
            "('nanoelectrónica', 0.5466996431350708)\n",
            "('robóticamente', 0.5429671406745911)\n",
            "('nanoingeniería', 0.5396210551261902)\n",
            "('ingeniería', 0.5380992889404297)\n",
            "('nanorobótica', 0.5334271192550659)\n",
            "('electrónica', 0.532334566116333)\n",
            "('RoboCup', 0.5323247313499451)\n",
            "('supertecnología', 0.5304873585700989)\n",
            "('robotizar', 0.5269424319267273)\n",
            "('neuromórfica', 0.5267678499221802)\n",
            "('biocibernética', 0.5252952575683594)\n",
            "('robotitos', 0.5247297286987305)\n",
            "('micro-robots', 0.5245423913002014)\n",
            "('animatrónica', 0.5234630107879639)\n",
            "('automatización', 0.5216972231864929)\n",
            "('técnología', 0.5203758478164673)\n",
            "('robotico', 0.5187936425209045)\n",
            "('Moway', 0.5183252096176147)\n",
            "('biotecnología', 0.5182772278785706)\n",
            "('Malakabot', 0.5133544206619263)\n",
            "('aeroespacial', 0.5121287107467651)\n",
            "('computación', 0.5115681886672974)\n",
            "('aero-espacial', 0.5095385909080505)\n",
            "('cibertecnología', 0.509191632270813)\n",
            "('robótic', 0.5088109970092773)\n",
            "\n",
            "Vecinos más cercanos de 'algoritmo':\n",
            "('Algoritmo', 0.7901278734207153)\n",
            "('algoritmos', 0.7648123502731323)\n",
            "('algorítmo', 0.7053194046020508)\n",
            "('algortimo', 0.6932921409606934)\n",
            "('algoritmo.', 0.6624864339828491)\n",
            "('subalgoritmo', 0.6408474445343018)\n",
            "('algorítmico', 0.6241986155509949)\n",
            "('Algoritmos', 0.5988386273384094)\n",
            "('algorimo', 0.5958271622657776)\n",
            "('algoritmia', 0.5948717594146729)\n",
            "('método', 0.5907175540924072)\n",
            "('algorithm', 0.5847280025482178)\n",
            "('bayesiano', 0.5770037174224854)\n",
            "('seudocódigo', 0.5747083425521851)\n",
            "('pseudo-código', 0.5745146870613098)\n",
            "('algorítmica', 0.5719175934791565)\n",
            "('preprocesamiento', 0.568527102470398)\n",
            "('backoff', 0.5625855922698975)\n",
            "('EdgeRank', 0.561636745929718)\n",
            "('convolucional', 0.5614719390869141)\n",
            "('n-grama', 0.5607975721359253)\n",
            "('pseudocódigo', 0.5589545965194702)\n",
            "('criptosistema', 0.5581759214401245)\n",
            "('Edgerank', 0.5574913620948792)\n",
            "('Quicksort', 0.5555109977722168)\n",
            "('hashing', 0.555015504360199)\n",
            "('algortimos', 0.553820788860321)\n",
            "('perceptrón', 0.5521885752677917)\n",
            "('DPLL', 0.549935519695282)\n",
            "('algorítmos', 0.5487937331199646)\n",
            "('preproceso', 0.5484862327575684)\n",
            "('iterativo', 0.5480727553367615)\n",
            "('algoritmica', 0.5476495623588562)\n",
            "('Bayesiano', 0.5472836494445801)\n",
            "('precodificador', 0.5461140871047974)\n",
            "('algorítmicamente', 0.5458419322967529)\n",
            "('secuenciamiento', 0.5425370931625366)\n",
            "('algoritmos.', 0.5424759387969971)\n",
            "('pseudocodigo', 0.5414775609970093)\n",
            "('quicksort', 0.5412349104881287)\n",
            "('iterador', 0.5396130681037903)\n",
            "('heurísticas', 0.5394526720046997)\n",
            "('cifrador', 0.5393772125244141)\n",
            "('backtracking', 0.5367761850357056)\n",
            "('iterativamente', 0.5345056653022766)\n",
            "('RankBrain', 0.5328435897827148)\n",
            "('ALGORITMO', 0.5278441905975342)\n",
            "('algorítmicas', 0.5247180461883545)\n",
            "('deconvolución', 0.5237851142883301)\n",
            "('elmétodo', 0.5216777920722961)\n",
            "\n",
            "Vecinos más cercanos de 'nanotecnología':\n",
            "('nanociencia', 0.7849370241165161)\n",
            "('nanotecnologia', 0.7808120846748352)\n",
            "('nanotecnológica', 0.7775318026542664)\n",
            "('nanotecnologías', 0.7618330121040344)\n",
            "('bioingeniería', 0.7465653419494629)\n",
            "('nano-tecnología', 0.7410937547683716)\n",
            "('Nanotecnología', 0.7399650812149048)\n",
            "('nanobiotecnología', 0.7396988868713379)\n",
            "('nanoelectrónica', 0.7365654110908508)\n",
            "('nanomedicina', 0.7355393171310425)\n",
            "('biotecnología', 0.7326776385307312)\n",
            "('nanoingeniería', 0.720867931842804)\n",
            "('nanociencias', 0.7012054920196533)\n",
            "('nanotecnológicos', 0.6872255206108093)\n",
            "('nanotecnológico', 0.687110424041748)\n",
            "('nanofotónica', 0.6839072704315186)\n",
            "('microtecnología', 0.6701793074607849)\n",
            "('biomedicina', 0.6650858521461487)\n",
            "('nanotecnologÃ', 0.6615911722183228)\n",
            "('bio-tecnología', 0.659645140171051)\n",
            "('microelectrónica', 0.6593194007873535)\n",
            "('nanocelulosa', 0.6554341912269592)\n",
            "('nanofabricación', 0.6551733016967773)\n",
            "('biociencia', 0.6527442932128906)\n",
            "('nanoescala', 0.6527097225189209)\n",
            "('nanotech', 0.6504842042922974)\n",
            "('Nanotecnologia', 0.650044858455658)\n",
            "('nanorobótica', 0.649101972579956)\n",
            "('nanomateriales', 0.6466667652130127)\n",
            "('bionanotecnología', 0.6442694664001465)\n",
            "('nanotecnológicas', 0.6428139805793762)\n",
            "('tecnología', 0.6407207250595093)\n",
            "('nanomundo', 0.6389793157577515)\n",
            "('nano-escala', 0.6362442374229431)\n",
            "('nanorobots', 0.6309901475906372)\n",
            "('bio-ingeniería', 0.630530059337616)\n",
            "('Nanobiotecnología', 0.622105598449707)\n",
            "('nanoestructura', 0.6213383078575134)\n",
            "('nano-robots', 0.620686948299408)\n",
            "('nanométrica', 0.6203221678733826)\n",
            "('biotecnologías', 0.6145784258842468)\n",
            "('Nanomedicina', 0.6135979890823364)\n",
            "('Nanofotónica', 0.6117962002754211)\n",
            "('grafeno', 0.6107121706008911)\n",
            "('nanomaterial', 0.6098186373710632)\n",
            "('bioelectrónica', 0.6068084239959717)\n",
            "('nanodispositivos', 0.6047442555427551)\n",
            "('biotecnologia', 0.6045020818710327)\n",
            "('biociencias', 0.5976279973983765)\n",
            "('biofotónica', 0.597326397895813)\n",
            "\n",
            "Vecinos más cercanos de 'genética':\n",
            "('genetica', 0.8152891993522644)\n",
            "('genético', 0.7292822003364563)\n",
            "('genéticas', 0.7200011014938354)\n",
            "('genómica', 0.7151764035224915)\n",
            "('genética.El', 0.7148244976997375)\n",
            "('genética.La', 0.7112064957618713)\n",
            "('Genética', 0.7076438665390015)\n",
            "('epigenética', 0.7022491693496704)\n",
            "('genotípica', 0.6966868042945862)\n",
            "('génetica', 0.6957272291183472)\n",
            "('biológica', 0.6949284076690674)\n",
            "('genética.', 0.6879187226295471)\n",
            "('genética-', 0.6877935528755188)\n",
            "('fenotípica', 0.6852418780326843)\n",
            "('genéticos', 0.6837476491928101)\n",
            "('cromosómica', 0.68061763048172)\n",
            "('biogenética', 0.6636722683906555)\n",
            "('biología', 0.661587119102478)\n",
            "('genética.En', 0.6544925570487976)\n",
            "('bioquímica', 0.6472913026809692)\n",
            "('cromosomática', 0.6397516131401062)\n",
            "('genétic', 0.638011634349823)\n",
            "('genes', 0.6373819708824158)\n",
            "('evolutiva', 0.6234391331672668)\n",
            "('génica', 0.6226320266723633)\n",
            "('monogénica', 0.6203983426094055)\n",
            "('biólogica', 0.6158719062805176)\n",
            "('genéticamente', 0.6134788393974304)\n",
            "('genéticaLa', 0.6096162796020508)\n",
            "('fitogenética', 0.6040564775466919)\n",
            "('morfológica', 0.6024535298347473)\n",
            "('poligénica', 0.6005383729934692)\n",
            "('epigenetica', 0.5993759036064148)\n",
            "('geneticas', 0.5990943908691406)\n",
            "('citogenética', 0.5959125757217407)\n",
            "('inmunogenética', 0.5951748490333557)\n",
            "('genoma', 0.5940229296684265)\n",
            "('Epigenética', 0.5934366583824158)\n",
            "('cromosomica', 0.5917754769325256)\n",
            "('geneticista', 0.5879642963409424)\n",
            "('transcriptómica', 0.5875036716461182)\n",
            "('genetista', 0.5851656794548035)\n",
            "('mutación', 0.5834757089614868)\n",
            "('reprogenética', 0.582737386226654)\n",
            "('monogenética', 0.5826912522315979)\n",
            "('eugénica', 0.5821914076805115)\n",
            "('genetico', 0.5810620188713074)\n",
            "('genético-molecular', 0.5810246467590332)\n",
            "('biomédica', 0.5806649327278137)\n",
            "('psicobiológica', 0.5803390145301819)\n",
            "\n",
            "Vecinos más cercanos de 'energía':\n",
            "('energia', 0.7970202565193176)\n",
            "('enrgía', 0.7237268090248108)\n",
            "('enegía', 0.7118865847587585)\n",
            "('energía.La', 0.7115048170089722)\n",
            "('energíay', 0.7097620368003845)\n",
            "('energía.Y', 0.6995264887809753)\n",
            "('laenergía', 0.6971576809883118)\n",
            "('energíaeléctrica', 0.6756666898727417)\n",
            "('energía.El', 0.6717117428779602)\n",
            "('energía.En', 0.6710812449455261)\n",
            "('energías', 0.6703699231147766)\n",
            "('electricidad', 0.667457103729248)\n",
            "('Energía', 0.662880003452301)\n",
            "('energía.', 0.6591578125953674)\n",
            "('energíade', 0.656923770904541)\n",
            "('nergía', 0.6498966813087463)\n",
            "('energía.No', 0.6498440504074097)\n",
            "('energìa', 0.6496502161026001)\n",
            "('energÍa', 0.6478553414344788)\n",
            "('energía.Es', 0.6464784145355225)\n",
            "('energ', 0.6422850489616394)\n",
            "('energía.Una', 0.6421869993209839)\n",
            "('energíaEnergía', 0.641189694404602)\n",
            "('energíaEn', 0.6406082510948181)\n",
            "('energía.A', 0.6379669904708862)\n",
            "('energía.Si', 0.6374342441558838)\n",
            "('energética', 0.6332196593284607)\n",
            "('energí', 0.6321682333946228)\n",
            "('energíaLa', 0.6303986310958862)\n",
            "('deenergía', 0.6215035915374756)\n",
            "('energía.Un', 0.6210883259773254)\n",
            "('bio-energía', 0.6186395287513733)\n",
            "('energía.Además', 0.6118544340133667)\n",
            "('energetización', 0.6071942448616028)\n",
            "('energía.Cuando', 0.6060243844985962)\n",
            "('-energía', 0.60557621717453)\n",
            "('energía.Con', 0.5995699167251587)\n",
            "('enegia', 0.5975423455238342)\n",
            "('energético', 0.5973560214042664)\n",
            "('energía.-', 0.5960478186607361)\n",
            "('energía.Se', 0.5940465927124023)\n",
            "('eléctricidad', 0.589316725730896)\n",
            "('enrgia', 0.5891615748405457)\n",
            "('eléctrica', 0.5884431600570679)\n",
            "('vitalidad', 0.5861052870750427)\n",
            "('energi', 0.5842832326889038)\n",
            "('energéticos', 0.5834992527961731)\n",
            "('electríca', 0.5831995010375977)\n",
            "('energía.Este', 0.5822159647941589)\n",
            "('deelectricidad', 0.5808875560760498)\n",
            "\n",
            "Vecinos más cercanos de 'bioinformática':\n",
            "('bioinformatica', 0.7947583198547363)\n",
            "('bioinformáticas', 0.7874136567115784)\n",
            "('bioinformáticos', 0.7789129018783569)\n",
            "('bioinformático', 0.7690600156784058)\n",
            "('Bioinformática', 0.7091545462608337)\n",
            "('genómica', 0.7080807685852051)\n",
            "('bioinformatics', 0.6921724081039429)\n",
            "('bioinformación', 0.6863115429878235)\n",
            "('biomedicina', 0.68048495054245)\n",
            "('proteómica', 0.6610301733016968)\n",
            "('biomédica', 0.6349438428878784)\n",
            "('Bioinformatica', 0.6339586973190308)\n",
            "('bioestadística', 0.6317318081855774)\n",
            "('biotecnología', 0.6110839247703552)\n",
            "('Bioinformáticos', 0.6106744408607483)\n",
            "('bioingeniería', 0.6080287098884583)\n",
            "('metabolómica', 0.6039505004882812)\n",
            "('genómicos', 0.6036680340766907)\n",
            "('metagenómica', 0.6023349165916443)\n",
            "('nanobiotecnología', 0.5948261618614197)\n",
            "('biocomputación', 0.5939603447914124)\n",
            "('microarrays', 0.5904622673988342)\n",
            "('geoinformática', 0.5893951654434204)\n",
            "('biociencia', 0.5780577659606934)\n",
            "('biociencias', 0.576248049736023)\n",
            "('farmacogenómica', 0.5758781433105469)\n",
            "('Bioinformatics', 0.5679655075073242)\n",
            "('genómicas', 0.5673369765281677)\n",
            "('biología', 0.5673260688781738)\n",
            "('Bioinformático', 0.5635021328926086)\n",
            "('Genómica', 0.5620720982551575)\n",
            "('genómico', 0.559505820274353)\n",
            "('nutrigenómica', 0.556509256362915)\n",
            "('nanomedicina', 0.5546575784683228)\n",
            "('Metagenómica', 0.5545569658279419)\n",
            "('biofarmacia', 0.5532992482185364)\n",
            "('nanotecnología', 0.5494715571403503)\n",
            "('transcriptómica', 0.5482964515686035)\n",
            "('Biotecnología', 0.5439430475234985)\n",
            "('bioinorgánica', 0.5438961982727051)\n",
            "('biotecnológica', 0.5428450703620911)\n",
            "('biomolecular', 0.5414311289787292)\n",
            "('biosanitaria', 0.5414243936538696)\n",
            "('geociencia', 0.5376496911048889)\n",
            "('bionanotecnología', 0.5367189645767212)\n",
            "('bioingenieria', 0.5344443917274475)\n",
            "('farmacogenética', 0.5335385203361511)\n",
            "('geomática', 0.5331301093101501)\n",
            "('bioquímica', 0.5322375297546387)\n",
            "('nanotecnológica', 0.5306783318519592)\n",
            "\n",
            "Vecinos más cercanos de 'satélite':\n",
            "('satélite.El', 0.7607001066207886)\n",
            "('satélites', 0.7440404295921326)\n",
            "('satélite.', 0.7431674599647522)\n",
            "('satelite', 0.711395263671875)\n",
            "('satelital', 0.7107310891151428)\n",
            "('satélite.La', 0.7027543783187866)\n",
            "('satélite.En', 0.6834077835083008)\n",
            "('satélital', 0.6662290096282959)\n",
            "('satélit', 0.6479429006576538)\n",
            "('PeruSat-1', 0.6387661099433899)\n",
            "('sátelite', 0.637841522693634)\n",
            "('satelitar', 0.628054141998291)\n",
            "('geoestacionario', 0.6275059580802917)\n",
            "('satélite.Free', 0.625544548034668)\n",
            "('Satélite', 0.6195108294487)\n",
            "('submétrico', 0.6188051104545593)\n",
            "('SAT-1', 0.6008471250534058)\n",
            "('satélite-', 0.5981935262680054)\n",
            "('satelitales', 0.5951591730117798)\n",
            "('Arsat-2', 0.5927050113677979)\n",
            "('satélitales', 0.5890388488769531)\n",
            "('minisatélite', 0.5861631631851196)\n",
            "('Arsat-1', 0.5851246118545532)\n",
            "('GOES-13', 0.581655740737915)\n",
            "('Sentinel-2A', 0.5794858932495117)\n",
            "('TKSAT-1', 0.5726392865180969)\n",
            "('Venesat-1', 0.569005012512207)\n",
            "('Sentinel-1A', 0.5636835694313049)\n",
            "('MetOp', 0.5625839829444885)\n",
            "('geostacionario', 0.5619845986366272)\n",
            "('Sentinel-1B', 0.5618289113044739)\n",
            "('Sentinel-2B', 0.5608847141265869)\n",
            "('LandSat', 0.5576457381248474)\n",
            "('cuasisatélite', 0.556687593460083)\n",
            "('SSOT', 0.5562362670898438)\n",
            "('satelitaria', 0.5550404787063599)\n",
            "('Sentinel-3A', 0.5449199676513672)\n",
            "('PerúSAT-1', 0.5439221262931824)\n",
            "('LAGEOS', 0.5403329730033875)\n",
            "('Sentinel-1', 0.5400339961051941)\n",
            "('picosatélite', 0.5373332500457764)\n",
            "('ARSAT-2', 0.5359141826629639)\n",
            "('Sentinel-2', 0.5350702404975891)\n",
            "('planeta-satélite', 0.5345133543014526)\n",
            "('astromóvil', 0.5330775380134583)\n",
            "('satelites', 0.5309855937957764)\n",
            "('CryoSat-2', 0.5284841060638428)\n",
            "('telepuertos', 0.5284713506698608)\n",
            "('ARSAT-1', 0.5274966955184937)\n",
            "('VENESAT-1', 0.5271754860877991)\n",
            "\n",
            "Vecinos más cercanos de 'telecomunicaciones':\n",
            "('telecomunicación', 0.7806094884872437)\n",
            "('Telecomunicaciones', 0.7510266304016113)\n",
            "('telefonía', 0.7258526086807251)\n",
            "('telecomunicaciónes', 0.7207922339439392)\n",
            "('detelecomunicaciones', 0.7055696845054626)\n",
            "('telefonías', 0.6712420582771301)\n",
            "('telecomunicaciones-', 0.65592360496521)\n",
            "('comunicaciones', 0.6551668643951416)\n",
            "('telecos', 0.6423295736312866)\n",
            "('telecomunicaciones.', 0.6355317831039429)\n",
            "('telecomunicaciones.En', 0.6352434754371643)\n",
            "('radiocomunicaciones', 0.6299449801445007)\n",
            "('telecom', 0.6279864311218262)\n",
            "('telecomunicaciones.El', 0.62788987159729)\n",
            "('telecomunicacion', 0.62001633644104)\n",
            "('telefonia', 0.6167579889297485)\n",
            "('telecomunicaciones.La', 0.6020739078521729)\n",
            "('teleco', 0.5965201258659363)\n",
            "('telecomunicaciones.-', 0.5921194553375244)\n",
            "('radiodifusión', 0.5916929841041565)\n",
            "('telcos', 0.5890800356864929)\n",
            "('telco', 0.5886690020561218)\n",
            "('operadoras', 0.588346004486084)\n",
            "('alambricas', 0.5846718549728394)\n",
            "('Telecos', 0.5673962235450745)\n",
            "('teleinformática', 0.5545766353607178)\n",
            "('telefoní', 0.5544478893280029)\n",
            "('informática', 0.5535787343978882)\n",
            "('comunicaciónes', 0.5533151030540466)\n",
            "('telecomunicacione', 0.545950710773468)\n",
            "('telecoms', 0.5431521534919739)\n",
            "('Comunicaciones', 0.5425155162811279)\n",
            "('radiotelefónicas', 0.5411561727523804)\n",
            "('Telecomunicación', 0.5384221076965332)\n",
            "('Telecomunicaciones.', 0.5372365713119507)\n",
            "('TELECOMUNICACIONES', 0.537011981010437)\n",
            "('infraestructuras', 0.5341131091117859)\n",
            "('infocomunicaciones', 0.533136785030365)\n",
            "('radiotelefonía', 0.5318232178688049)\n",
            "('radiocomunicación', 0.5298065543174744)\n",
            "('informáticas', 0.5285345911979675)\n",
            "('decomunicaciones', 0.527099609375)\n",
            "('tecnologías', 0.526898205280304)\n",
            "('radiobases', 0.5268433094024658)\n",
            "('inalámbricas', 0.5203549265861511)\n",
            "('radiotelegráficas', 0.5169066190719604)\n",
            "('radioeléctricos', 0.5134775042533875)\n",
            "('telefónicas', 0.5128219723701477)\n",
            "('radioeléctricas', 0.512752115726471)\n",
            "('Telecomunicaciones-', 0.5114268064498901)\n",
            "\n",
            "Vecinos más cercanos de 'criptografía':\n",
            "('Criptografía', 0.7855003476142883)\n",
            "('criptografia', 0.7843843698501587)\n",
            "('criptográfica', 0.7616919875144958)\n",
            "('criptología', 0.7574480772018433)\n",
            "('encriptación', 0.7358993291854858)\n",
            "('criptográfico', 0.7129349112510681)\n",
            "('criptográficos', 0.6880425810813904)\n",
            "('criptográficas', 0.6778602004051208)\n",
            "('Criptografia', 0.6630315780639648)\n",
            "('criptosistemas', 0.6541545391082764)\n",
            "('criptografías', 0.6474246382713318)\n",
            "('criptoanálisis', 0.636447548866272)\n",
            "('esteganografía', 0.6313924193382263)\n",
            "('cifrado', 0.627327024936676)\n",
            "('encriptamiento', 0.6227132678031921)\n",
            "('criptográficamente', 0.6151742339134216)\n",
            "('desencriptación', 0.6146025657653809)\n",
            "('Criptología', 0.6127298474311829)\n",
            "('Criptográfica', 0.6059223413467407)\n",
            "('Encriptación', 0.6028195023536682)\n",
            "('cifrador', 0.6002465486526489)\n",
            "('criptosistema', 0.5963839292526245)\n",
            "('criptogramas', 0.5945843458175659)\n",
            "('cifradores', 0.5898430943489075)\n",
            "('Criptoanálisis', 0.5874021053314209)\n",
            "('Esteganografía', 0.5865083932876587)\n",
            "('encriptar', 0.5856391191482544)\n",
            "('cifrados', 0.5824765563011169)\n",
            "('encriptado', 0.5770236849784851)\n",
            "('criptoanalista', 0.5757866501808167)\n",
            "('Criptograma', 0.5724161863327026)\n",
            "('criptograma', 0.5695334076881409)\n",
            "('encriptacion', 0.56626296043396)\n",
            "('informática', 0.5593450665473938)\n",
            "('cryptography', 0.550426721572876)\n",
            "('esteganográfica', 0.5491364002227783)\n",
            "('desencriptar', 0.5470281839370728)\n",
            "('Criptográficos', 0.5454208254814148)\n",
            "('Desencriptación', 0.5436360239982605)\n",
            "('criptológica', 0.5424458384513855)\n",
            "('Cifrado', 0.5386444330215454)\n",
            "('cifrar', 0.5351729989051819)\n",
            "('encriptaciones', 0.5308231115341187)\n",
            "('encriptada', 0.5307274460792542)\n",
            "('criptoanarquismo', 0.5296249985694885)\n",
            "('Criptográficas', 0.5295641422271729)\n",
            "('descifrado', 0.5263509154319763)\n",
            "('criptoanalistas', 0.5262197852134705)\n",
            "('criptógrafos', 0.5257051587104797)\n",
            "('OpenPGP', 0.5247249603271484)\n",
            "\n",
            "Vecinos más cercanos de 'astronomía':\n",
            "('Astronomía', 0.7823813557624817)\n",
            "('astronomia', 0.7536820769309998)\n",
            "('astrofísica', 0.7070966362953186)\n",
            "('astronómica', 0.6974460482597351)\n",
            "('astrometría', 0.6721444129943848)\n",
            "('astronomía.', 0.6408696174621582)\n",
            "('cosmología', 0.6364154815673828)\n",
            "('Astronomia', 0.630184531211853)\n",
            "('geología', 0.6270261406898499)\n",
            "('astronaútica', 0.6213940382003784)\n",
            "('astrofotografía', 0.6209322810173035)\n",
            "('Astrometría', 0.6170912981033325)\n",
            "('arqueoastronomía', 0.61426842212677)\n",
            "('cosmografía', 0.6100907325744629)\n",
            "('Arqueoastronomía', 0.6086989641189575)\n",
            "('astronómico', 0.6037625074386597)\n",
            "('radioastronomía', 0.602910041809082)\n",
            "('trigonometría', 0.599450945854187)\n",
            "('geodesia', 0.5987900495529175)\n",
            "('astrobiología', 0.593458354473114)\n",
            "('astronomy', 0.5934004187583923)\n",
            "('heliofísica', 0.5917931795120239)\n",
            "('planetología', 0.5902997255325317)\n",
            "('astroquímica', 0.5889090299606323)\n",
            "('astronautica', 0.5849788188934326)\n",
            "('ciencia', 0.5847923159599304)\n",
            "('astronomí', 0.5845551490783691)\n",
            "('astronáutica', 0.5840204358100891)\n",
            "('ornitología', 0.5828104019165039)\n",
            "('astronom', 0.5824242830276489)\n",
            "('astronómicos', 0.580398678779602)\n",
            "('astrosismología', 0.5800758004188538)\n",
            "('telescopios', 0.5800142288208008)\n",
            "('astroarqueología', 0.5798256397247314)\n",
            "('Cosmología', 0.5794482231140137)\n",
            "('astrónomos', 0.5790396928787231)\n",
            "('astrología', 0.574222207069397)\n",
            "('astrodinámica', 0.5728701949119568)\n",
            "('astronomías', 0.5690522193908691)\n",
            "('astrónomo', 0.568290650844574)\n",
            "('astrofisica', 0.5672045946121216)\n",
            "('Astrofotografía', 0.5651980042457581)\n",
            "('telescopio', 0.5618613958358765)\n",
            "('astronoma', 0.5617488622665405)\n",
            "('arqueología', 0.5610601305961609)\n",
            "('astronómicas', 0.5601330995559692)\n",
            "('meteorología', 0.5585805773735046)\n",
            "('Astrofísica', 0.5556403994560242)\n",
            "('Astroquímica', 0.5494601130485535)\n",
            "('AstronomíA', 0.5493071675300598)\n",
            "\n",
            "Vecinos más cercanos de 'microscopio':\n",
            "('microscopios', 0.7634170651435852)\n",
            "('Microscopio', 0.7633920907974243)\n",
            "('microscópio', 0.7525631189346313)\n",
            "('microscopio.', 0.7369697690010071)\n",
            "('miscroscopio', 0.7148782014846802)\n",
            "('microscopia', 0.7122825384140015)\n",
            "('microscopía', 0.7083853483200073)\n",
            "('ultramicroscopio', 0.7016130685806274)\n",
            "('microscopista', 0.6933697462081909)\n",
            "('espectroscopio', 0.6729156374931335)\n",
            "('microscópico', 0.6703280210494995)\n",
            "('estereomicroscopio', 0.6484975218772888)\n",
            "('microscope', 0.6451837420463562)\n",
            "('estereoscopio', 0.6357213854789734)\n",
            "('Microscopia', 0.6317160725593567)\n",
            "('microfotografía', 0.6297417879104614)\n",
            "('telescopio', 0.6194229125976562)\n",
            "('biomicroscopía', 0.6170925498008728)\n",
            "('Microscope', 0.6139311194419861)\n",
            "('microscopistas', 0.6116889119148254)\n",
            "('microscopías', 0.6103457808494568)\n",
            "('oftalmoscopio', 0.6029353141784668)\n",
            "('microscopico', 0.6026055812835693)\n",
            "('microscópios', 0.5997065901756287)\n",
            "('microscópica', 0.5942104458808899)\n",
            "('colposcopio', 0.5941489934921265)\n",
            "('Microscopía', 0.5883082747459412)\n",
            "('dermatoscopio', 0.5847064256668091)\n",
            "('microscopica', 0.581305205821991)\n",
            "('microfotografías', 0.5773968696594238)\n",
            "('microscópicas', 0.5695659518241882)\n",
            "('MicroscopioMicroscopios', 0.5648735761642456)\n",
            "('espectroscopios', 0.5635402202606201)\n",
            "('microscopicas', 0.5634775161743164)\n",
            "('microscopic', 0.5630407333374023)\n",
            "('lupas', 0.5603074431419373)\n",
            "('microscopÃ', 0.5583488345146179)\n",
            "('microscópicamente', 0.5577602982521057)\n",
            "('Espectroscopio', 0.5566825270652771)\n",
            "('criomicroscopía', 0.5557684302330017)\n",
            "('retinoscopio', 0.5541346073150635)\n",
            "('Microfotografía', 0.5538538694381714)\n",
            "('estereoscopios', 0.5486319661140442)\n",
            "('fotomicrografía', 0.5472390055656433)\n",
            "('microanálisis', 0.5467866063117981)\n",
            "('oftalmoscopios', 0.5463532209396362)\n",
            "('epifluorescencia', 0.5444917678833008)\n",
            "('ovoscopio', 0.5444324016571045)\n",
            "('Oftalmoscopio', 0.5429896116256714)\n",
            "('Estereoscopio', 0.5408421158790588)\n",
            "\n",
            "Vecinos más cercanos de 'virus':\n",
            "('virus.El', 0.7716013789176941)\n",
            "('viruses', 0.7519727945327759)\n",
            "('virus.En', 0.7389150857925415)\n",
            "('virus.', 0.7357977032661438)\n",
            "('-virus', 0.7259802222251892)\n",
            "('Virus', 0.725348949432373)\n",
            "('virus.La', 0.7054016590118408)\n",
            "('virus-', 0.7022616863250732)\n",
            "('elvirus', 0.6996356844902039)\n",
            "('virus.Los', 0.6956051588058472)\n",
            "('supervirus', 0.6882960200309753)\n",
            "('malware', 0.6792905330657959)\n",
            "('malwares', 0.6742639541625977)\n",
            "('retrovirus', 0.6688744425773621)\n",
            "('infectado', 0.6669275760650635)\n",
            "('virus-T', 0.6661491990089417)\n",
            "('poliovirus', 0.6632509231567383)\n",
            "('infectados', 0.6598925590515137)\n",
            "('T-virus', 0.6550540924072266)\n",
            "('filovirus', 0.6508386731147766)\n",
            "('-Virus', 0.648780107498169)\n",
            "('virús', 0.6470646262168884)\n",
            "('mimivirus', 0.6464508175849915)\n",
            "('Poxvirus', 0.6389399170875549)\n",
            "('infectar', 0.6382986307144165)\n",
            "('alfavirus', 0.6341210007667542)\n",
            "('patógeno', 0.6332001686096191)\n",
            "('infecta', 0.6315938234329224)\n",
            "('norovirus', 0.6260607838630676)\n",
            "('G-virus', 0.624921441078186)\n",
            "('coronavirus', 0.6217167973518372)\n",
            "('viruz', 0.6206697821617126)\n",
            "('Poliovirus', 0.6200518608093262)\n",
            "('microbio', 0.6177619695663452)\n",
            "('anti-virus', 0.6143776774406433)\n",
            "('arenavirus', 0.6140061616897583)\n",
            "('VIRUS', 0.6139556169509888)\n",
            "('Ebolavirus', 0.612582802772522)\n",
            "('Norovirus', 0.6124504208564758)\n",
            "('virus.Las', 0.6099609136581421)\n",
            "('vírico', 0.60969477891922)\n",
            "('lentivirus', 0.6095985770225525)\n",
            "('papovavirus', 0.6091681718826294)\n",
            "('astrovirus', 0.6083099246025085)\n",
            "('viroides', 0.608005940914154)\n",
            "('flavivirus', 0.6076410412788391)\n",
            "('antivirus', 0.6064334511756897)\n",
            "('potyvirus', 0.6055833697319031)\n",
            "('calicivirus', 0.6042320132255554)\n",
            "('paramyxovirus', 0.6039491295814514)\n",
            "\n",
            "Vecinos más cercanos de 'astrofísica':\n",
            "('Astrofísica', 0.7315963506698608)\n",
            "('astronomía', 0.7070966958999634)\n",
            "('astrofísico', 0.6821480393409729)\n",
            "('cosmología', 0.6634228229522705)\n",
            "('astrofísicas', 0.6628586053848267)\n",
            "('heliofísica', 0.657953679561615)\n",
            "('astrobiología', 0.6552726626396179)\n",
            "('astroquímica', 0.6551429629325867)\n",
            "('radioastronomía', 0.6435599327087402)\n",
            "('astrofísicos', 0.6359279751777649)\n",
            "('astrofisica', 0.619717001914978)\n",
            "('exobiología', 0.6061956286430359)\n",
            "('planetología', 0.6055903434753418)\n",
            "('astronáutica', 0.6052641868591309)\n",
            "('radiofísica', 0.6052495837211609)\n",
            "('cosmoquímica', 0.5985090136528015)\n",
            "('geociencia', 0.5984868407249451)\n",
            "('astrosismología', 0.5970481038093567)\n",
            "('cosmóloga', 0.5944370031356812)\n",
            "('Astrobiología', 0.5937140583992004)\n",
            "('Cosmología', 0.5922397375106812)\n",
            "('astronaútica', 0.5906347632408142)\n",
            "('astrónoma', 0.5906254649162292)\n",
            "('cuántica', 0.5900461077690125)\n",
            "('Astronomía', 0.5887062549591064)\n",
            "('astrometría', 0.5886442065238953)\n",
            "('Astroquímica', 0.5841548442840576)\n",
            "('astrodinámica', 0.584154486656189)\n",
            "('geofísica', 0.583524763584137)\n",
            "('astronautica', 0.5789722204208374)\n",
            "('cosmologia', 0.5783083438873291)\n",
            "('Radioastronomía', 0.5761910676956177)\n",
            "('Heliofísica', 0.5724346041679382)\n",
            "('Astrometría', 0.5684889554977417)\n",
            "('heliosismología', 0.5662140846252441)\n",
            "('Exobiología', 0.5648044347763062)\n",
            "('sismología', 0.563273012638092)\n",
            "('astrobióloga', 0.561195433139801)\n",
            "('geología', 0.5571128726005554)\n",
            "('astronomia', 0.5556692481040955)\n",
            "('Astrofísicos', 0.5554910898208618)\n",
            "('radioquímica', 0.5547423362731934)\n",
            "('radioastronómica', 0.5537642240524292)\n",
            "('astronómica', 0.5458282828330994)\n",
            "('química-física', 0.5455776453018188)\n",
            "('astroarqueología', 0.5429299473762512)\n",
            "('quántica', 0.5394726991653442)\n",
            "('cosmólogo', 0.5392228960990906)\n",
            "('espectroscopia', 0.5391142964363098)\n",
            "('astronoma', 0.5375900864601135)\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Specify a list of words\n",
        "words = [\"tecnología\", \"ordenador\", \"software\", \"hardware\", \"internet\", \"programación\", \"informática\", \"robótica\", \"algoritmo\", \"nanotecnología\", \"genética\", \"energía\", \"bioinformática\", \"satélite\", \"telecomunicaciones\", \"criptografía\", \"astronomía\", \"microscopio\", \"virus\", \"astrofísica\"]\n",
        "\n",
        "# Specify the number of closest words you want to output\n",
        "number_of_words = 50\n",
        "\n",
        "for word in words:\n",
        "    if not word in words_covered:\n",
        "        # If the word is not covered by the model: ask for a new one\n",
        "        print(f'Word \"{word}\" not in the vocabulary. Specify a different word.')\n",
        "    else:\n",
        "        # If the word is covered, print its closest words\n",
        "        nearest_neighbors = ds_model.most_similar(word, topn = number_of_words)\n",
        "        print(f\"Vecinos más cercanos de '{word}':\")\n",
        "        for n in nearest_neighbors:\n",
        "            print(n)\n",
        "        print()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eliosEXLzr9K"
      },
      "source": [
        "### 3.2. Área del discurso cuya importancia se ha mantenido en el tiempo: filosofía y literatura"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XFOzGKqO3js6"
      },
      "source": [
        "Repetimos el proceso anterior, ahora con un área del discurso cuya importancia se haya mantenido en el tiempo, es decir, cuya frecuencia, como norma general, no haya aumentado ni disminuido. En este caso, el área elegida es el de la filosofía y la literatura.\n",
        "\n",
        "Calculamos los 50 vecinos más cercanos para cada uno de los 20 términos seleccionados."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6tLG6T0_zrS7",
        "outputId": "d3094a31-b536-4d18-fe4a-545a610fac96"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Vecinos más cercanos de 'filosofía':\n",
            "('filosofia', 0.753205418586731)\n",
            "('filosfía', 0.7394858598709106)\n",
            "('Filosofía', 0.7370599508285522)\n",
            "('ﬁlosofía', 0.7143828868865967)\n",
            "('metafísica', 0.7080802917480469)\n",
            "('lafilosofía', 0.7072498202323914)\n",
            "('filosófica', 0.6759143471717834)\n",
            "('teología', 0.6751934289932251)\n",
            "('epistemología', 0.6650721430778503)\n",
            "('filosofía.La', 0.6599026918411255)\n",
            "('antifilosofía', 0.6440329551696777)\n",
            "('ética', 0.6399340629577637)\n",
            "('flosofía', 0.6390079259872437)\n",
            "('metafilosofía', 0.6309134364128113)\n",
            "('filosofía.El', 0.6290537118911743)\n",
            "('filosofía.En', 0.6245825290679932)\n",
            "('sociología', 0.6242606043815613)\n",
            "('filosofías', 0.6221627593040466)\n",
            "('folosofía', 0.6191378235816956)\n",
            "('filosofí', 0.6185414791107178)\n",
            "('filisofía', 0.617245614528656)\n",
            "('ontología', 0.61435467004776)\n",
            "('pedagogía', 0.6139876842498779)\n",
            "('filosofía-', 0.6084092259407043)\n",
            "('ciencia', 0.6078254580497742)\n",
            "('presocrática', 0.6064100861549377)\n",
            "('concepción', 0.6046718955039978)\n",
            "('filósofía', 0.604185163974762)\n",
            "('fenomenología', 0.6029626131057739)\n",
            "('teoría', 0.6022968888282776)\n",
            "('psicología', 0.5941744446754456)\n",
            "('ideología', 0.5931698083877563)\n",
            "('religión', 0.5930315256118774)\n",
            "('gnoseología', 0.5884395837783813)\n",
            "('antropología', 0.5883352160453796)\n",
            "('axiología', 0.5874308943748474)\n",
            "('doctrina', 0.5778905749320984)\n",
            "('filosofía.', 0.5749783515930176)\n",
            "('filosófia', 0.5730145573616028)\n",
            "('racionalidad', 0.5714333653450012)\n",
            "('metaética', 0.5712610483169556)\n",
            "('Socrática', 0.5707515478134155)\n",
            "('histórico-filosófica', 0.5704767107963562)\n",
            "('filosófico-política', 0.5703256726264954)\n",
            "('dialéctica', 0.5697532296180725)\n",
            "('teorética', 0.5673428177833557)\n",
            "('-Filosofía', 0.5667462944984436)\n",
            "('estética', 0.5645771026611328)\n",
            "('losofía', 0.5642400979995728)\n",
            "('filosofìa', 0.5636892914772034)\n",
            "\n",
            "Vecinos más cercanos de 'historia':\n",
            "('historía', 0.7661880254745483)\n",
            "('histora', 0.7520037889480591)\n",
            "('hitoria', 0.7218353748321533)\n",
            "('historia.La', 0.7028302550315857)\n",
            "('lahistoria', 0.6919401288032532)\n",
            "('hsitoria', 0.6894531846046448)\n",
            "('narración', 0.6795175671577454)\n",
            "('Historia', 0.6790950298309326)\n",
            "('historia.Esta', 0.657439649105072)\n",
            "('histoira', 0.6564320921897888)\n",
            "('história', 0.652216374874115)\n",
            "('historia.Pero', 0.6456984877586365)\n",
            "('histórica', 0.636650562286377)\n",
            "('hisotira', 0.636134147644043)\n",
            "('hisotria', 0.6338330507278442)\n",
            "('historio', 0.632929801940918)\n",
            "('historia.En', 0.6318506598472595)\n",
            "('hostoria', 0.6300044059753418)\n",
            "('historia.Una', 0.6296066045761108)\n",
            "('Lahistoria', 0.6289377808570862)\n",
            "('intrahistoria', 0.6278890371322632)\n",
            "('histori', 0.6257522106170654)\n",
            "('unahistoria', 0.6240144371986389)\n",
            "('epopeya', 0.6217653751373291)\n",
            "('contada', 0.621701180934906)\n",
            "('micro-historia', 0.6216820478439331)\n",
            "('historia.Este', 0.6165677309036255)\n",
            "('estahistoria', 0.6154812574386597)\n",
            "('historia.Así', 0.6146447658538818)\n",
            "('narra', 0.6085740923881531)\n",
            "('historia.Y', 0.6070147156715393)\n",
            "('trama', 0.6069709658622742)\n",
            "('historia.Es', 0.6063015460968018)\n",
            "('contrahistoria', 0.6047431826591492)\n",
            "('historia.También', 0.5991497039794922)\n",
            "('historia.Si', 0.5981959104537964)\n",
            "('novela', 0.595466136932373)\n",
            "('novelada', 0.5943343043327332)\n",
            "('leyenda', 0.5915735363960266)\n",
            "('suhistoria', 0.5910796523094177)\n",
            "('hisoria', 0.5888513326644897)\n",
            "('historias', 0.5882479548454285)\n",
            "('historia.Porque', 0.586432933807373)\n",
            "('narrada', 0.5854515433311462)\n",
            "('historia.Lo', 0.5845250487327576)\n",
            "('histroria', 0.5825695991516113)\n",
            "('historia.Sin', 0.5820989012718201)\n",
            "('hstoria', 0.5816148519515991)\n",
            "('historia.Además', 0.5809094309806824)\n",
            "('no-historia', 0.5805447101593018)\n",
            "\n",
            "Vecinos más cercanos de 'literatura':\n",
            "('poesía', 0.7597827911376953)\n",
            "('Literatura', 0.7538098692893982)\n",
            "('laliteratura', 0.7329268455505371)\n",
            "('literaria', 0.724042534828186)\n",
            "('literatura.La', 0.7169128656387329)\n",
            "('-literatura', 0.7073168754577637)\n",
            "('narrativa', 0.7027537226676941)\n",
            "('literatuta', 0.7025009989738464)\n",
            "('litertura', 0.695068359375)\n",
            "('literatua', 0.6944712996482849)\n",
            "('subliteratura', 0.6838032007217407)\n",
            "('literatura.En', 0.6804614067077637)\n",
            "('paraliteratura', 0.6682526469230652)\n",
            "('novelística', 0.666924774646759)\n",
            "('literarura', 0.6666539907455444)\n",
            "('literaturas', 0.6593669652938843)\n",
            "('literartura', 0.6591448187828064)\n",
            "('literatura.El', 0.6585943102836609)\n",
            "('literaturizada', 0.6474997401237488)\n",
            "('literaturidad', 0.6448045372962952)\n",
            "('literatura.', 0.6419036388397217)\n",
            "('fabulística', 0.639064610004425)\n",
            "('metaliteratura', 0.6372807025909424)\n",
            "('cultura', 0.6339146494865417)\n",
            "('literatur', 0.6283273696899414)\n",
            "('prosa', 0.6209384202957153)\n",
            "('literatura.Y', 0.6206059455871582)\n",
            "('memorialística', 0.620415985584259)\n",
            "('.Literatura', 0.6193535327911377)\n",
            "('filología', 0.6168887615203857)\n",
            "('literaturización', 0.6148685216903687)\n",
            "('literaura', 0.6128191947937012)\n",
            "('literatura.-', 0.6098232269287109)\n",
            "('literatura-', 0.6070334315299988)\n",
            "('Metaliteratura', 0.606037437915802)\n",
            "('historiografía', 0.6044932007789612)\n",
            "('litaratura', 0.6034075021743774)\n",
            "('ciberliteratura', 0.6016144156455994)\n",
            "('ficción', 0.6010188460350037)\n",
            "('novela', 0.6009566783905029)\n",
            "('culturología', 0.600793719291687)\n",
            "('poética', 0.6004088521003723)\n",
            "('microliteratura', 0.5951783657073975)\n",
            "('literariedad', 0.594567060470581)\n",
            "('-Literatura', 0.5932118892669678)\n",
            "('mitología', 0.5929080247879028)\n",
            "('literario', 0.5928380489349365)\n",
            "('iteratura', 0.5925430655479431)\n",
            "('sociología', 0.5913150906562805)\n",
            "('cuentística', 0.5912342667579651)\n",
            "\n",
            "Vecinos más cercanos de 'ética':\n",
            "('moralidad', 0.7612817287445068)\n",
            "('Ética', 0.7420451641082764)\n",
            "('deontológica', 0.7316482067108154)\n",
            "('deontología', 0.7314380407333374)\n",
            "('moral', 0.725368320941925)\n",
            "('ético', 0.7205498814582825)\n",
            "('etica', 0.718700110912323)\n",
            "('laética', 0.6979423761367798)\n",
            "('éticos', 0.6771395206451416)\n",
            "('ético-social', 0.6678979396820068)\n",
            "('éticas', 0.6666160225868225)\n",
            "('ética-política', 0.6579106450080872)\n",
            "('eticidad', 0.6545214056968689)\n",
            "('honestidad', 0.6540856957435608)\n",
            "('ético-política', 0.651388943195343)\n",
            "('ética.La', 0.6506811380386353)\n",
            "('eticista', 0.6447959542274475)\n",
            "('Etica', 0.6419972777366638)\n",
            "('ético-religiosa', 0.6411514282226562)\n",
            "('filosofía', 0.6399341225624084)\n",
            "('axiológica', 0.632758378982544)\n",
            "('bioética', 0.6324824094772339)\n",
            "('decencia', 0.631175696849823)\n",
            "('deontológicamente', 0.6213811039924622)\n",
            "('ético-moral', 0.6210702061653137)\n",
            "('ética-', 0.6203319430351257)\n",
            "('honradez', 0.6153473854064941)\n",
            "('ética.El', 0.6151739358901978)\n",
            "('racionalidad', 0.6150721311569214)\n",
            "('ética.', 0.6139070391654968)\n",
            "('axiología', 0.6088122725486755)\n",
            "('metaética', 0.6078721284866333)\n",
            "('ético-cívica', 0.5982325077056885)\n",
            "('cívica', 0.593504011631012)\n",
            "('éticamente', 0.59295654296875)\n",
            "('filosófica', 0.5894072651863098)\n",
            "('deontologia', 0.5884146094322205)\n",
            "('ética.En', 0.5880642533302307)\n",
            "('praxis', 0.5858126878738403)\n",
            "('honorabilidad', 0.5852842926979065)\n",
            "('deontológico', 0.5850545167922974)\n",
            "('antiética', 0.5843389630317688)\n",
            "('ético-cultural', 0.5795362591743469)\n",
            "('infoética', 0.575465977191925)\n",
            "('probidad', 0.5736973881721497)\n",
            "('política', 0.5679925084114075)\n",
            "('deontológicos', 0.5641577243804932)\n",
            "('moral.La', 0.5631355047225952)\n",
            "('estética', 0.5629513263702393)\n",
            "('anti-ética', 0.5619570016860962)\n",
            "\n",
            "Vecinos más cercanos de 'metafísica':\n",
            "('filosófica', 0.7927559018135071)\n",
            "('ontológica', 0.7450382709503174)\n",
            "('ontoteológica', 0.73431795835495)\n",
            "('gnoseológica', 0.7297401428222656)\n",
            "('fenomenología', 0.7196477651596069)\n",
            "('meta-física', 0.7190386056900024)\n",
            "('ontología', 0.717137336730957)\n",
            "('filosofía', 0.7080803513526917)\n",
            "('antimetafísica', 0.6978221535682678)\n",
            "('ontoteología', 0.6922420859336853)\n",
            "('postmetafísica', 0.690777599811554)\n",
            "('fenomenológica', 0.6900342702865601)\n",
            "('epistemología', 0.6875667572021484)\n",
            "('gnoseología', 0.6875343918800354)\n",
            "('teorética', 0.6866322159767151)\n",
            "('metafisica', 0.684743344783783)\n",
            "('metafísico', 0.6839080452919006)\n",
            "('histórico-filosófica', 0.6833263635635376)\n",
            "('kantiana', 0.6818298101425171)\n",
            "('metafísica-', 0.6777124404907227)\n",
            "('fenoménica', 0.6722869277000427)\n",
            "('aristotélica', 0.6714326739311218)\n",
            "('Metafísica', 0.6709729433059692)\n",
            "('científico-filosófica', 0.670539379119873)\n",
            "('nouménica', 0.6699134707450867)\n",
            "('apofática', 0.6685729622840881)\n",
            "('dualística', 0.663243293762207)\n",
            "('filosófico-teológica', 0.6631556749343872)\n",
            "('panteística', 0.6619122624397278)\n",
            "('óntica', 0.6599130630493164)\n",
            "('antifilosófica', 0.6597925424575806)\n",
            "('mística', 0.6561930775642395)\n",
            "('teología', 0.6561243534088135)\n",
            "('etafísica', 0.6560994982719421)\n",
            "('Erística', 0.655662477016449)\n",
            "('inmanentista', 0.651205837726593)\n",
            "('presocrática', 0.6498791575431824)\n",
            "('filosófico-política', 0.649120569229126)\n",
            "('suprahistórica', 0.6484300494194031)\n",
            "('dialéctica', 0.6481844186782837)\n",
            "('epistemológica', 0.6437252163887024)\n",
            "('metafísicas', 0.6431059241294861)\n",
            "('teológica', 0.6425265669822693)\n",
            "('wittgensteiniana', 0.6420091390609741)\n",
            "('filosófico-religiosa', 0.6413170695304871)\n",
            "('aporética', 0.6412597894668579)\n",
            "('metafísica.', 0.639820396900177)\n",
            "('metafilosofía', 0.6395593881607056)\n",
            "('hermeneútica', 0.6393974423408508)\n",
            "('heideggeriana', 0.6392660140991211)\n",
            "\n",
            "Vecinos más cercanos de 'epistemología':\n",
            "('epistemológica', 0.7574942708015442)\n",
            "('gnoseología', 0.7495760321617126)\n",
            "('epistemologia', 0.7452916502952576)\n",
            "('ontología', 0.7214220762252808)\n",
            "('socioepistemología', 0.7211718559265137)\n",
            "('epistemologías', 0.7099193930625916)\n",
            "('Epistemología', 0.7087149024009705)\n",
            "('sociología', 0.6924495697021484)\n",
            "('metafísica', 0.6875666975975037)\n",
            "('metateoría', 0.6830403208732605)\n",
            "('gnoseológica', 0.6820071935653687)\n",
            "('fenomenología', 0.6804023385047913)\n",
            "('Gnoseología', 0.6801089644432068)\n",
            "('epistemología.', 0.6766985654830933)\n",
            "('epistemológico', 0.6701746582984924)\n",
            "('epistémica', 0.6676201224327087)\n",
            "('hermenéutica', 0.6675460338592529)\n",
            "('metafilosofía', 0.6664899587631226)\n",
            "('antropología', 0.6663900017738342)\n",
            "('filosofía', 0.6650722026824951)\n",
            "('lafilosofía', 0.6563494801521301)\n",
            "('axiología', 0.6497939825057983)\n",
            "('epistemológicas', 0.6488932967185974)\n",
            "('praxiología', 0.6476940512657166)\n",
            "('filosófico-política', 0.6443787217140198)\n",
            "('epistemologica', 0.6426836252212524)\n",
            "('filosófica', 0.6378360390663147)\n",
            "('epistemology', 0.6365914344787598)\n",
            "('ontologización', 0.6332148909568787)\n",
            "('ontoteología', 0.6319579482078552)\n",
            "('epistemológicamente', 0.6313406825065613)\n",
            "('metaética', 0.6295669078826904)\n",
            "('neuroetología', 0.6293140649795532)\n",
            "('teorética', 0.628441333770752)\n",
            "('pedagogía', 0.626448929309845)\n",
            "('neurofilosofía', 0.6262394785881042)\n",
            "('metateórica', 0.625501811504364)\n",
            "('Epistemologia', 0.6230769157409668)\n",
            "('neopositivista', 0.6198223829269409)\n",
            "('ﬁlosofía', 0.6195492744445801)\n",
            "('lapsicología', 0.6195451617240906)\n",
            "('fenomenológica', 0.6188650131225586)\n",
            "('teología', 0.6179698705673218)\n",
            "('teórico-política', 0.6167741417884827)\n",
            "('cognitivista', 0.615493655204773)\n",
            "('epistémico', 0.6133305430412292)\n",
            "('Filosofía', 0.6104137301445007)\n",
            "('ético-política', 0.6092382669448853)\n",
            "('epistemológicos', 0.6088119149208069)\n",
            "('ciencia', 0.6079379320144653)\n",
            "\n",
            "Vecinos más cercanos de 'dialéctica':\n",
            "('dialéctico', 0.7040383219718933)\n",
            "('hegeliana', 0.6555607914924622)\n",
            "('antinómica', 0.6527394652366638)\n",
            "('dialógica', 0.6520048975944519)\n",
            "('discursiva', 0.6498015522956848)\n",
            "('teórico-política', 0.6495678424835205)\n",
            "('metafísica', 0.6481843590736389)\n",
            "('dialécticamente', 0.6447880864143372)\n",
            "('gnoseológica', 0.643212080001831)\n",
            "('hermenéutica', 0.6431556940078735)\n",
            "('erística', 0.6415181159973145)\n",
            "('confrontación', 0.6393893957138062)\n",
            "('antinomia', 0.6388913989067078)\n",
            "('epistemológica', 0.6374189257621765)\n",
            "('dicotomía', 0.6364227533340454)\n",
            "('filosófica', 0.6348968148231506)\n",
            "('dialécticas', 0.6348012089729309)\n",
            "('Erística', 0.6340774297714233)\n",
            "('aporética', 0.6327792406082153)\n",
            "('Dialéctica', 0.627433717250824)\n",
            "('contradicción', 0.6265270709991455)\n",
            "('político-filosófica', 0.6248742341995239)\n",
            "('antidialéctica', 0.6195743083953857)\n",
            "('retórica', 0.6173402070999146)\n",
            "('teorética', 0.6172338128089905)\n",
            "('filosófico-política', 0.6162735819816589)\n",
            "('hermeneútica', 0.6162252426147461)\n",
            "('dialectica', 0.6158155798912048)\n",
            "('Hegeliana', 0.6111372709274292)\n",
            "('ético-política', 0.6102880239486694)\n",
            "('ontologización', 0.6082253456115723)\n",
            "('teorización', 0.6054635643959045)\n",
            "('monológica', 0.6027351021766663)\n",
            "('ontológica', 0.6014165878295898)\n",
            "('estético-política', 0.5988717675209045)\n",
            "('poiética', 0.598457396030426)\n",
            "('dialéctica.', 0.5981733202934265)\n",
            "('dialécticos', 0.5961514711380005)\n",
            "('histórico-filosófica', 0.5957611203193665)\n",
            "('lalógica', 0.5957047939300537)\n",
            "('ontología', 0.5948540568351746)\n",
            "('dualística', 0.5945537090301514)\n",
            "('gramsciana', 0.5941063761711121)\n",
            "('epistemología', 0.5927202105522156)\n",
            "('ideológica', 0.5924866199493408)\n",
            "('deconstructiva', 0.5905905961990356)\n",
            "('ética-política', 0.5883440375328064)\n",
            "('analéctica', 0.5861279964447021)\n",
            "('discursividad', 0.585516631603241)\n",
            "('lógica', 0.5854964852333069)\n",
            "\n",
            "Vecinos más cercanos de 'idealismo':\n",
            "('idealista', 0.753211259841919)\n",
            "('irrealismo', 0.7373681664466858)\n",
            "('romanticismo', 0.7012121677398682)\n",
            "('trascendentalismo', 0.701032280921936)\n",
            "('racionalismo', 0.696050763130188)\n",
            "('idealismos', 0.689115583896637)\n",
            "('pragmatismo', 0.6881343722343445)\n",
            "('irracionalismo', 0.6879672408103943)\n",
            "('intelectualismo', 0.6873970031738281)\n",
            "('utopismo', 0.6872261166572571)\n",
            "('Idealismo', 0.6848586201667786)\n",
            "('subjetivismo', 0.684464693069458)\n",
            "('realismo', 0.6824742555618286)\n",
            "('objetivismo', 0.6824092864990234)\n",
            "('moralismo', 0.6722823977470398)\n",
            "('humanismo', 0.6705665588378906)\n",
            "('positivismo', 0.6684083938598633)\n",
            "('antirrealismo', 0.6676329374313354)\n",
            "('sensualismo', 0.6664385199546814)\n",
            "('idealismo.', 0.661065936088562)\n",
            "('materialismo', 0.6563022136688232)\n",
            "('transcendentalismo', 0.656141996383667)\n",
            "('amoralismo', 0.6538726687431335)\n",
            "('sobrenaturalismo', 0.6537582874298096)\n",
            "('practicismo', 0.6513402462005615)\n",
            "('sentimentalismo', 0.649713933467865)\n",
            "('platonismo', 0.6477810144424438)\n",
            "('naturalismo', 0.6439996361732483)\n",
            "('sociologismo', 0.6434779167175293)\n",
            "('impersonalismo', 0.6427759528160095)\n",
            "('espiritualismo', 0.6404985785484314)\n",
            "('ideologismo', 0.6400349140167236)\n",
            "('anti-realismo', 0.6398927569389343)\n",
            "('psicologismo', 0.6376222968101501)\n",
            "('inmoralismo', 0.637083113193512)\n",
            "('emotivismo', 0.6370163559913635)\n",
            "('hegelianismo', 0.636934220790863)\n",
            "('empirismo', 0.632870078086853)\n",
            "('armonismo', 0.6323855519294739)\n",
            "('vitalismo', 0.6265572309494019)\n",
            "('pesimismo', 0.6229121088981628)\n",
            "('cientismo', 0.6220474243164062)\n",
            "('teoricismo', 0.6202824115753174)\n",
            "('revolucionarismo', 0.6198116540908813)\n",
            "('individualismo', 0.6194577217102051)\n",
            "('historicismo', 0.619133710861206)\n",
            "('dogmatismo', 0.619111180305481)\n",
            "('kantismo', 0.6158115863800049)\n",
            "('antinaturalismo', 0.6149023771286011)\n",
            "('románticismo', 0.6147583723068237)\n",
            "\n",
            "Vecinos más cercanos de 'realismo':\n",
            "('naturalismo', 0.7349772453308105)\n",
            "('irrealismo', 0.7292517423629761)\n",
            "('Realismo', 0.7146002650260925)\n",
            "('hiperrealismo', 0.7100304365158081)\n",
            "('hiper-realismo', 0.6945929527282715)\n",
            "('idealismo', 0.6824742555618286)\n",
            "('fotorrealismo', 0.6770662069320679)\n",
            "('realista', 0.6735996603965759)\n",
            "('verismo', 0.6627485156059265)\n",
            "('antirrealismo', 0.659432590007782)\n",
            "('dramatismo', 0.6587797403335571)\n",
            "('realismos', 0.6507425904273987)\n",
            "('surrealismo', 0.6360283493995667)\n",
            "('hiperrealista', 0.6321348547935486)\n",
            "('detallismo', 0.6310230493545532)\n",
            "('subrealismo', 0.6286553144454956)\n",
            "('anti-realismo', 0.619330644607544)\n",
            "('lirismo', 0.6136856079101562)\n",
            "('abstractismo', 0.6125116348266602)\n",
            "('patetismo', 0.6124396324157715)\n",
            "('hiper-realista', 0.608897864818573)\n",
            "('costumbrismo', 0.6018703579902649)\n",
            "('figurativismo', 0.6004151105880737)\n",
            "('neo-realismo', 0.5954589247703552)\n",
            "('realismo.', 0.5940201878547668)\n",
            "('superrealismo', 0.5928329229354858)\n",
            "('tremendismo', 0.5905845761299133)\n",
            "('romanticismo', 0.589253306388855)\n",
            "('pragmatismo', 0.583167314529419)\n",
            "('antinaturalismo', 0.5807906985282898)\n",
            "('Hiperrealismo', 0.5803806185722351)\n",
            "('fotorealismo', 0.5790407061576843)\n",
            "('simulacionismo', 0.5779098272323608)\n",
            "('Naturalismo', 0.5753691792488098)\n",
            "('expresionismo', 0.5724257826805115)\n",
            "('moralismo', 0.5719015002250671)\n",
            "('esteticismo', 0.5692341923713684)\n",
            "('esquematismo', 0.5675054788589478)\n",
            "('abstraccionismo', 0.5632455348968506)\n",
            "('subjetivismo', 0.5626927614212036)\n",
            "('efectismo', 0.5624660849571228)\n",
            "('colorismo', 0.5624351501464844)\n",
            "('ingenuismo', 0.5619808435440063)\n",
            "('sentimentalismo', 0.5618880391120911)\n",
            "('intimismo', 0.5608913898468018)\n",
            "('tenebrismo', 0.559257447719574)\n",
            "('clasicismo', 0.5591804385185242)\n",
            "('verosimilitud', 0.5587827563285828)\n",
            "('neorealismo', 0.5550055503845215)\n",
            "('objetivismo', 0.5549480319023132)\n",
            "\n",
            "Vecinos más cercanos de 'mito':\n",
            "('mitos', 0.7156797051429749)\n",
            "('mito.El', 0.6632424592971802)\n",
            "('Mito', 0.6358013153076172)\n",
            "('mitológico', 0.6280520558357239)\n",
            "('leyenda', 0.5997164249420166)\n",
            "('mitificador', 0.5915999412536621)\n",
            "('mito.La', 0.5891977548599243)\n",
            "('mítico', 0.5887472033500671)\n",
            "('mito.', 0.5851922035217285)\n",
            "('desmitificado', 0.5826635360717773)\n",
            "('mitificación', 0.5780203938484192)\n",
            "('tópico', 0.5713987946510315)\n",
            "('imaginario', 0.5685610175132751)\n",
            "('mitologema', 0.5681911110877991)\n",
            "('estereotipo', 0.5675641298294067)\n",
            "('mitología', 0.5669612884521484)\n",
            "('mitificado', 0.5654909014701843)\n",
            "('arquetipo', 0.5625837445259094)\n",
            "('mito-', 0.5483109951019287)\n",
            "('mitológica', 0.5450323820114136)\n",
            "('desmitificación', 0.5442909002304077)\n",
            "('monomito', 0.5422597527503967)\n",
            "('mitologías', 0.5345129370689392)\n",
            "('mitifica', 0.5335392355918884)\n",
            "('mitologización', 0.5321012139320374)\n",
            "('mitopoético', 0.529063880443573)\n",
            "('mitema', 0.5289090275764465)\n",
            "('fábula', 0.5275295972824097)\n",
            "('leyendas', 0.522209107875824)\n",
            "('paradigma', 0.5217936038970947)\n",
            "('desmitifica', 0.5215206146240234)\n",
            "('legendario', 0.5209037661552429)\n",
            "('arquetípico', 0.5207280516624451)\n",
            "('mitológicamente', 0.5197505950927734)\n",
            "('mistificador', 0.519525408744812)\n",
            "('hombre-dios', 0.5185499787330627)\n",
            "('bulo', 0.5181765556335449)\n",
            "('fabulario', 0.5165165662765503)\n",
            "('mitologico', 0.5161867737770081)\n",
            "('mitificadora', 0.514668881893158)\n",
            "('mitólogico', 0.513320803642273)\n",
            "('relato', 0.5111544728279114)\n",
            "('héroe', 0.5094594359397888)\n",
            "('prometeico', 0.5091883540153503)\n",
            "('meta-relato', 0.5079202055931091)\n",
            "('cosmogónico', 0.506399393081665)\n",
            "('Mitos', 0.5044924020767212)\n",
            "('desmitificar', 0.5041233897209167)\n",
            "('evemerismo', 0.5032660961151123)\n",
            "('titanismo', 0.5024584531784058)\n",
            "\n",
            "Vecinos más cercanos de 'leyenda':\n",
            "('Leyenda', 0.736714243888855)\n",
            "('leyendas', 0.7268853187561035)\n",
            "('laleyenda', 0.653353214263916)\n",
            "('leyenda.La', 0.6515308022499084)\n",
            "('leyenda.', 0.6087195873260498)\n",
            "('mito', 0.5997164249420166)\n",
            "('legendaria', 0.5983545184135437)\n",
            "('historia', 0.5915735960006714)\n",
            "('legenda', 0.5852053165435791)\n",
            "('leyenda.El', 0.5786168575286865)\n",
            "('leyanda', 0.575927734375)\n",
            "('mítica', 0.5724383592605591)\n",
            "('leyenda.En', 0.5681256651878357)\n",
            "('fábula', 0.563344419002533)\n",
            "('leyendario', 0.5577988028526306)\n",
            "('apócrifa', 0.5556821823120117)\n",
            "('mitología', 0.5510739088058472)\n",
            "('leyenda-', 0.5374625325202942)\n",
            "('tradición', 0.5374449491500854)\n",
            "('anécdota', 0.5324801206588745)\n",
            "('mitológica', 0.5238539576530457)\n",
            "('Leyendas', 0.523812472820282)\n",
            "('epopeya', 0.5153790712356567)\n",
            "('antiquísima', 0.506520688533783)\n",
            "('LEYENDA', 0.5028460621833801)\n",
            "('historía', 0.4928533732891083)\n",
            "('semilegendaria', 0.4920249879360199)\n",
            "('hostoria', 0.491234689950943)\n",
            "('leyenda.-', 0.49080199003219604)\n",
            "('layenda', 0.4904637336730957)\n",
            "('Artúrica', 0.4875836968421936)\n",
            "('iconografía', 0.4864746332168579)\n",
            "('yenda', 0.4862678647041321)\n",
            "('maldición', 0.4826613962650299)\n",
            "('fabulada', 0.4817214906215668)\n",
            "('legendario', 0.4803791046142578)\n",
            "('Imperiofobia', 0.478561133146286)\n",
            "('mitificación', 0.47598499059677124)\n",
            "('arturiana', 0.4739726781845093)\n",
            "('épica', 0.4703775644302368)\n",
            "('leyende', 0.47017204761505127)\n",
            "('verídica', 0.4685070216655731)\n",
            "('griálica', 0.46750110387802124)\n",
            "('simbología', 0.4660470485687256)\n",
            "('superstición', 0.4658403694629669)\n",
            "('Mocuana', 0.4652320146560669)\n",
            "('leyendaEl', 0.46471351385116577)\n",
            "('Lahistoria', 0.46465227007865906)\n",
            "('creencia', 0.46436479687690735)\n",
            "('rumorología', 0.46372896432876587)\n",
            "\n",
            "Vecinos más cercanos de 'novela':\n",
            "('novelita', 0.7530117034912109)\n",
            "('novela.La', 0.7516555786132812)\n",
            "('novelada', 0.729340136051178)\n",
            "('novela.En', 0.7240937352180481)\n",
            "('novela.El', 0.715833306312561)\n",
            "('novela.Es', 0.7048033475875854)\n",
            "('lanovela', 0.7030386328697205)\n",
            "('novela.A', 0.7010476589202881)\n",
            "('novelas', 0.7003716230392456)\n",
            "('narrativa', 0.6978268027305603)\n",
            "('novelística', 0.695792555809021)\n",
            "('Novela', 0.6949988007545471)\n",
            "('novelilla', 0.6948056221008301)\n",
            "('novela.Y', 0.6937626004219055)\n",
            "('unanovela', 0.6934808492660522)\n",
            "('narración', 0.6911344528198242)\n",
            "('-novela', 0.6892960071563721)\n",
            "('novela-río', 0.6865884065628052)\n",
            "('mini-novela', 0.6817799806594849)\n",
            "('novelaza', 0.6743161678314209)\n",
            "('metanovela', 0.6719518899917603)\n",
            "('trilogía', 0.6698280572891235)\n",
            "('novela.Pero', 0.667462944984436)\n",
            "('novelado', 0.665761411190033)\n",
            "('antinovela', 0.6646997928619385)\n",
            "('novelaLa', 0.6610701680183411)\n",
            "('novelizada', 0.6593790650367737)\n",
            "('micronovela', 0.6586263179779053)\n",
            "('novela.-', 0.652298092842102)\n",
            "('autora', 0.6507787108421326)\n",
            "('novelar', 0.6486124992370605)\n",
            "('novela-ensayo', 0.6449437141418457)\n",
            "('novelando', 0.6434547305107117)\n",
            "('blog-novela', 0.6428854465484619)\n",
            "('prosa', 0.6421138644218445)\n",
            "('nóvela', 0.6411178112030029)\n",
            "('novela.', 0.6396332383155823)\n",
            "('autobiografía', 0.6394218802452087)\n",
            "('novelón', 0.6366469264030457)\n",
            "('novela.No', 0.6360457539558411)\n",
            "('autobiográfica', 0.6314107775688171)\n",
            "('noveliza', 0.6312043070793152)\n",
            "('novelización', 0.6288301944732666)\n",
            "('novela.También', 0.6275703310966492)\n",
            "('novela-', 0.6264669299125671)\n",
            "('novelucha', 0.6211801171302795)\n",
            "('libro', 0.6209088563919067)\n",
            "('literaria', 0.6201032996177673)\n",
            "('Novelita', 0.616381824016571)\n",
            "('novelístico', 0.61504727602005)\n",
            "\n",
            "Vecinos más cercanos de 'cuento':\n",
            "('relato', 0.7195145487785339)\n",
            "('Cuento', 0.7120373249053955)\n",
            "('cuentito', 0.7083762288093567)\n",
            "('cuento.El', 0.6932233572006226)\n",
            "('cuento.Y', 0.6904427409172058)\n",
            "('cuentos', 0.6884084343910217)\n",
            "('cuentecito', 0.6764525771141052)\n",
            "('elcuento', 0.6759606599807739)\n",
            "('cuento.', 0.6220976710319519)\n",
            "('cuento.En', 0.6180423498153687)\n",
            "('cuentecillo', 0.6054344773292542)\n",
            "('fábula', 0.6043453812599182)\n",
            "('cuento.Pero', 0.6033758521080017)\n",
            "('audiocuento', 0.5889703035354614)\n",
            "('minicuento', 0.587795078754425)\n",
            "('cuento.Lo', 0.5857762694358826)\n",
            "('cuento.La', 0.584905743598938)\n",
            "('cuento.-', 0.5781852602958679)\n",
            "('cuentico', 0.5764174461364746)\n",
            "('microcuento', 0.5761793851852417)\n",
            "('micro-relato', 0.572496235370636)\n",
            "('minirelato', 0.5719529986381531)\n",
            "('microrelato', 0.567919135093689)\n",
            "('mini-relato', 0.5669620633125305)\n",
            "('cuentos.Y', 0.5661247968673706)\n",
            "('cuentode', 0.5619596242904663)\n",
            "('cuento.Yo', 0.561446487903595)\n",
            "('cuento-', 0.5612085461616516)\n",
            "('libro-cuento', 0.5587145686149597)\n",
            "('cuento.Es', 0.5585893988609314)\n",
            "('minirrelato', 0.5570755004882812)\n",
            "('cuentoo', 0.5547439455986023)\n",
            "('cuento.No', 0.5537553429603577)\n",
            "('poema', 0.5483397841453552)\n",
            "('cuentos.El', 0.5475067496299744)\n",
            "('cuento.Si', 0.5461717844009399)\n",
            "('fabula', 0.5450916290283203)\n",
            "('chiste', 0.5416534543037415)\n",
            "('cuentoEl', 0.5408470034599304)\n",
            "('cuentitos', 0.5407158136367798)\n",
            "('hadas', 0.5395239591598511)\n",
            "('Relato', 0.537615180015564)\n",
            "('.Cuento', 0.5357853174209595)\n",
            "('microrrelato', 0.5343881845474243)\n",
            "('cuento.Un', 0.5341323018074036)\n",
            "('cuento.A', 0.5334484577178955)\n",
            "('libro', 0.5333061218261719)\n",
            "('relatito', 0.530159056186676)\n",
            "('ensayito', 0.5286694765090942)\n",
            "('relatos', 0.527751624584198)\n",
            "\n",
            "Vecinos más cercanos de 'poesía':\n",
            "('poética', 0.8132402300834656)\n",
            "('Poesía', 0.7649217844009399)\n",
            "('literatura', 0.7597827315330505)\n",
            "('poesía.La', 0.7426981329917908)\n",
            "('prosa', 0.7256800532341003)\n",
            "('poesia', 0.7235012054443359)\n",
            "('lírica', 0.7211125493049622)\n",
            "('poesía.Y', 0.7187411785125732)\n",
            "('poesía.A', 0.7098560333251953)\n",
            "('-poesía', 0.6969362497329712)\n",
            "('poesía.En', 0.6913288235664368)\n",
            "('poesía.-', 0.688889741897583)\n",
            "('metapoética', 0.6870777606964111)\n",
            "('poetización', 0.6848600506782532)\n",
            "('poemas', 0.6838559508323669)\n",
            "('antipoética', 0.6805348992347717)\n",
            "('metapoesía', 0.6786344051361084)\n",
            "('.Poesía', 0.6698548197746277)\n",
            "('poesía.Pero', 0.6659080982208252)\n",
            "('poesíaLa', 0.6652084589004517)\n",
            "('poesíade', 0.664966881275177)\n",
            "('poesía.', 0.6632022857666016)\n",
            "('poesíaes', 0.6625195145606995)\n",
            "('poesía.El', 0.6609379053115845)\n",
            "('poético', 0.6597998142242432)\n",
            "('narrativa', 0.6575338244438171)\n",
            "('literatura.La', 0.6567133069038391)\n",
            "('literaria', 0.6566307544708252)\n",
            "('poesía.Es', 0.6541061997413635)\n",
            "('poesías', 0.642048716545105)\n",
            "('poesíay', 0.6415156722068787)\n",
            "('poesí', 0.6384111046791077)\n",
            "('Metapoesía', 0.6378769874572754)\n",
            "('poema', 0.6365514397621155)\n",
            "('poesía.Por', 0.6348284482955933)\n",
            "('poesíaen', 0.6327426433563232)\n",
            "('Poética', 0.629968523979187)\n",
            "('poetizar', 0.62918621301651)\n",
            "('micropoesía', 0.6285262107849121)\n",
            "('poeta', 0.627961277961731)\n",
            "('poetizada', 0.6251484751701355)\n",
            "('poesía.No', 0.620520293712616)\n",
            "('antología', 0.6204169392585754)\n",
            "('perfopoesía', 0.6203158497810364)\n",
            "('poeticidad', 0.6124255657196045)\n",
            "('poesía-', 0.6120718717575073)\n",
            "('poesíacon', 0.6113343834877014)\n",
            "('-literatura', 0.6112812161445618)\n",
            "('poemática', 0.6105207800865173)\n",
            "('poemario', 0.6086990833282471)\n",
            "\n",
            "Vecinos más cercanos de 'drama':\n",
            "('melodrama', 0.7376816868782043)\n",
            "('dramas', 0.7130996584892273)\n",
            "('-drama', 0.7079519033432007)\n",
            "('dramático', 0.7007554769515991)\n",
            "('dramón', 0.6878849864006042)\n",
            "('comedia', 0.6605600714683533)\n",
            "('dramatismo', 0.6446623206138611)\n",
            "('thriller', 0.6364938616752625)\n",
            "('drámatico', 0.6329166293144226)\n",
            "('docu-drama', 0.6183651089668274)\n",
            "('dramatico', 0.6140933632850647)\n",
            "('Drama', 0.6026580333709717)\n",
            "('drama-comedia', 0.6021314263343811)\n",
            "('dramática', 0.5984906554222107)\n",
            "('tragicomedia', 0.5887628793716431)\n",
            "('drama.', 0.5837889909744263)\n",
            "('romance', 0.5782110691070557)\n",
            "('mini-drama', 0.5768774151802063)\n",
            "('cómico', 0.5751402974128723)\n",
            "('dorama', 0.5747058391571045)\n",
            "('trágico', 0.5719597339630127)\n",
            "('kdrama', 0.5685542821884155)\n",
            "('filme', 0.5682795643806458)\n",
            "('K-drama', 0.5631461143493652)\n",
            "('k-drama', 0.5630074143409729)\n",
            "('tragedia', 0.5625545978546143)\n",
            "('drámatica', 0.5609550476074219)\n",
            "('film', 0.554571270942688)\n",
            "('trasfondo', 0.5539422631263733)\n",
            "('horror', 0.5536150932312012)\n",
            "('comedia-drama', 0.5529587864875793)\n",
            "('dramatizado', 0.5506813526153564)\n",
            "('enredo', 0.5505844354629517)\n",
            "('biodrama', 0.5487321615219116)\n",
            "('melodramático', 0.5456340909004211)\n",
            "('comedía', 0.5437687039375305)\n",
            "('drama-', 0.5435922741889954)\n",
            "('Docudrama', 0.5434980392456055)\n",
            "('culebrón', 0.5433469414710999)\n",
            "('dramatiza', 0.5420112013816833)\n",
            "('triller', 0.541440486907959)\n",
            "('dramedy', 0.5405207276344299)\n",
            "('melodramatismo', 0.5401908755302429)\n",
            "('trhiller', 0.5397964715957642)\n",
            "('dramatica', 0.5353537201881409)\n",
            "('Kdrama', 0.5328593850135803)\n",
            "('melodramón', 0.532431423664093)\n",
            "('relato', 0.531010091304779)\n",
            "('tragicómico', 0.5301465392112732)\n",
            "('heroicismo', 0.5293217897415161)\n",
            "\n",
            "Vecinos más cercanos de 'tragedia':\n",
            "('catástrofe', 0.7595750093460083)\n",
            "('tragedía', 0.7490363717079163)\n",
            "('trágica', 0.7481371164321899)\n",
            "('tragedias', 0.7284281253814697)\n",
            "('Tragedia', 0.7171626091003418)\n",
            "('tragedia.La', 0.6941248178482056)\n",
            "('trágico', 0.6607365608215332)\n",
            "('tragedia.', 0.6532981395721436)\n",
            "('tragedia.El', 0.6346396803855896)\n",
            "('hecatombe', 0.6236135363578796)\n",
            "('masacre', 0.6213980317115784)\n",
            "('tragedia.En', 0.6207696795463562)\n",
            "('fatalidad', 0.6124364137649536)\n",
            "('calamidad', 0.6118547916412354)\n",
            "('trajedia', 0.6106660962104797)\n",
            "('dramática', 0.6082770228385925)\n",
            "('tragicomedia', 0.5912208557128906)\n",
            "('catátrofe', 0.5819991230964661)\n",
            "('atrocidad', 0.5795626044273376)\n",
            "('tragedia-', 0.5787500143051147)\n",
            "('devastación', 0.5784284472465515)\n",
            "('tragicidad', 0.5727213025093079)\n",
            "('tragedia.Un', 0.5724427700042725)\n",
            "('fatídica', 0.5696806907653809)\n",
            "('debacle', 0.5690684914588928)\n",
            "('muerte', 0.567733645439148)\n",
            "('drama', 0.562554657459259)\n",
            "('epopeya', 0.5610749125480652)\n",
            "('desastre', 0.5586127638816833)\n",
            "('trágicos', 0.5573464632034302)\n",
            "('catastrófica', 0.5543929934501648)\n",
            "('conflagración', 0.5536900162696838)\n",
            "('trágicas', 0.5532786846160889)\n",
            "('desventura', 0.551680326461792)\n",
            "('terrible', 0.5489723682403564)\n",
            "('tragicómica', 0.547282338142395)\n",
            "('desgracia', 0.544590950012207)\n",
            "('catastrofe', 0.5439910888671875)\n",
            "('anticomunes', 0.541394829750061)\n",
            "('desdicha', 0.540963351726532)\n",
            "('Tragedias', 0.5401200652122498)\n",
            "('catástrofe.El', 0.5367209315299988)\n",
            "('conmoción', 0.5347698330879211)\n",
            "('desolación', 0.5345154404640198)\n",
            "('ocurrida', 0.5343751907348633)\n",
            "('barbarie', 0.5335443019866943)\n",
            "('tragediaLa', 0.5333980321884155)\n",
            "('mascarse', 0.5327604413032532)\n",
            "('tragédia', 0.5302914381027222)\n",
            "('crisis', 0.5299201607704163)\n",
            "\n",
            "Vecinos más cercanos de 'comedia':\n",
            "('tragicomedia', 0.7783498167991638)\n",
            "('comedía', 0.7710936069488525)\n",
            "('comedieta', 0.743686318397522)\n",
            "('tragi-comedia', 0.7371872663497925)\n",
            "('cómica', 0.7289940714836121)\n",
            "('comedias', 0.7253091931343079)\n",
            "('Comedia', 0.7239565253257751)\n",
            "('drama-comedia', 0.7101466059684753)\n",
            "('-comedia', 0.68056321144104)\n",
            "('comicidad', 0.6765454411506653)\n",
            "('comedia.La', 0.6732184886932373)\n",
            "('comedia-drama', 0.6703327298164368)\n",
            "('comedia.', 0.661670446395874)\n",
            "('drama', 0.6605600714683533)\n",
            "('sátira', 0.6548333168029785)\n",
            "('dramedia', 0.6517126560211182)\n",
            "('comedia-dramática', 0.6506359577178955)\n",
            "('Telecomedia', 0.6469647884368896)\n",
            "('cómico-dramática', 0.6441896557807922)\n",
            "('comedia-romántica', 0.6436091065406799)\n",
            "('comedia-musical', 0.6397387385368347)\n",
            "('telecomedia', 0.6391695141792297)\n",
            "('sitcom', 0.6390038132667542)\n",
            "('comedi', 0.6388776302337646)\n",
            "('comedietas', 0.6364920139312744)\n",
            "('comedia-', 0.6363065838813782)\n",
            "('melodrama', 0.6301658153533936)\n",
            "('comedio', 0.6300044059753418)\n",
            "('dramática', 0.6251031160354614)\n",
            "('comedia-ballet', 0.6233105659484863)\n",
            "('cómico', 0.6222347021102905)\n",
            "('drámatica', 0.6200354099273682)\n",
            "('comedías', 0.600376546382904)\n",
            "('dramedy', 0.6002132296562195)\n",
            "('teatral', 0.5982110500335693)\n",
            "('acción-comedia', 0.5981026291847229)\n",
            "('tragicomedias', 0.5960745215415955)\n",
            "('parodia', 0.5953317284584045)\n",
            "('tragicómica', 0.5946784615516663)\n",
            "('sit-com', 0.5886022448539734)\n",
            "('cómico-dramático', 0.5885608196258545)\n",
            "('película', 0.5858811736106873)\n",
            "('telecomedias', 0.5835524201393127)\n",
            "('melodramatica', 0.5832344889640808)\n",
            "('comedy', 0.5795525908470154)\n",
            "('comica', 0.5786085724830627)\n",
            "('terror-comedia', 0.5778089761734009)\n",
            "('humorística', 0.5764508247375488)\n",
            "('dramatica', 0.5735020041465759)\n",
            "('melodramática', 0.5683134198188782)\n",
            "\n",
            "Vecinos más cercanos de 'renacimiento':\n",
            "('resurgimiento', 0.7195373773574829)\n",
            "('Renacimiento', 0.7028490900993347)\n",
            "('florecimiento', 0.6901020407676697)\n",
            "('renacer', 0.6718101501464844)\n",
            "('renacimientos', 0.6283776164054871)\n",
            "('renacentismo', 0.6167356967926025)\n",
            "('renaciente', 0.6080523729324341)\n",
            "('re-nacimiento', 0.6073992252349854)\n",
            "('renacimiento.', 0.6063444018363953)\n",
            "('reflorecimiento', 0.5912724137306213)\n",
            "('renacentista', 0.5837386846542358)\n",
            "('prerrenacimiento', 0.5780572891235352)\n",
            "('redescubrimiento', 0.5759384632110596)\n",
            "('Renacimento', 0.5709290504455566)\n",
            "('clasicismo', 0.5668537616729736)\n",
            "('resurgir', 0.5582138299942017)\n",
            "('medioevo', 0.557918906211853)\n",
            "('surgimiento', 0.5516595840454102)\n",
            "('decadencia', 0.5478225350379944)\n",
            "('titanismo', 0.5432558059692383)\n",
            "('declive', 0.5413686633110046)\n",
            "('romanismo', 0.537912130355835)\n",
            "('humanismo', 0.5374555587768555)\n",
            "('revivalismo', 0.5367863774299622)\n",
            "('reavivamiento', 0.5360314846038818)\n",
            "('renacido', 0.5319048762321472)\n",
            "('advenimiento', 0.5304852724075317)\n",
            "('progreso', 0.5285927653312683)\n",
            "('renaciera', 0.52668696641922)\n",
            "('Medioevo', 0.5245823860168457)\n",
            "('Neorrenacimiento', 0.5221299529075623)\n",
            "('revival', 0.5216764807701111)\n",
            "('renaciendo', 0.5205797553062439)\n",
            "('auge', 0.5202593207359314)\n",
            "('barroco', 0.5187894105911255)\n",
            "('Resurgimiento', 0.5175010561943054)\n",
            "('neorrenacimiento', 0.5162782073020935)\n",
            "('resurrección', 0.5158201456069946)\n",
            "('modernismo', 0.5158129334449768)\n",
            "('renació', 0.5156953930854797)\n",
            "('revitalización', 0.5153764486312866)\n",
            "('ocaso', 0.5153184533119202)\n",
            "('iconoclasmo', 0.5152969360351562)\n",
            "('pre-clásico', 0.5147227644920349)\n",
            "('reencantamiento', 0.5143858194351196)\n",
            "('esplendor', 0.5117054581642151)\n",
            "('rejuvenecimiento', 0.5109919905662537)\n",
            "('apogeo', 0.508028507232666)\n",
            "('arraigamiento', 0.5077479481697083)\n",
            "('quattrocento', 0.5067124962806702)\n",
            "\n",
            "Vecinos más cercanos de 'barroco':\n",
            "('Barroco', 0.8030688166618347)\n",
            "('rococó', 0.7940360307693481)\n",
            "('manierista', 0.7642779350280762)\n",
            "('barroco-rococó', 0.7598788738250732)\n",
            "('renacentista', 0.7409785389900208)\n",
            "('renacentismo', 0.7407571077346802)\n",
            "('neoclásico', 0.7350517511367798)\n",
            "('neo-barroco', 0.7313390374183655)\n",
            "('tardobarroco', 0.7283700108528137)\n",
            "('barroca', 0.7261214852333069)\n",
            "('barroco.', 0.7253845930099487)\n",
            "('barroco-neoclásico', 0.7182675004005432)\n",
            "('ultrabarroco', 0.7125997543334961)\n",
            "('barroco-', 0.7106795310974121)\n",
            "('Neobarroco', 0.7060686349868774)\n",
            "('churrigueresco', 0.7026685476303101)\n",
            "('clasicismo', 0.6933080554008484)\n",
            "('manierismo', 0.6928764581680298)\n",
            "('neoclasicismo', 0.6891069412231445)\n",
            "('gótico', 0.6870766282081604)\n",
            "('neobarroco', 0.686318576335907)\n",
            "('barrocos', 0.6846121549606323)\n",
            "('plateresco', 0.6845858097076416)\n",
            "('barroco-clasicista', 0.6842743158340454)\n",
            "('clasicista', 0.6732991933822632)\n",
            "('barroquismo', 0.6728917360305786)\n",
            "('Manierista', 0.6709327697753906)\n",
            "('neoclasicista', 0.6700795888900757)\n",
            "('tardogótico', 0.6699673533439636)\n",
            "('anticlásico', 0.6694835424423218)\n",
            "('Neoclásico', 0.6666135191917419)\n",
            "('protobarroco', 0.6638385057449341)\n",
            "('neorenacentista', 0.66298508644104)\n",
            "('gótico-flamenco', 0.647652804851532)\n",
            "('barroquizante', 0.6466062664985657)\n",
            "('gótico-renacentista', 0.641391396522522)\n",
            "('barrocas', 0.6394783854484558)\n",
            "('neo-gótico', 0.6380370855331421)\n",
            "('dieciochesco', 0.6363306045532227)\n",
            "('Neorrománico', 0.6355676651000977)\n",
            "('neo-clásico', 0.6354489326477051)\n",
            "('Renacentismo', 0.6349025368690491)\n",
            "('tardo-barroco', 0.6339778900146484)\n",
            "('Neogótico', 0.6327167749404907)\n",
            "('neorománico', 0.6309810280799866)\n",
            "('abarrocado', 0.6292238831520081)\n",
            "('Churrigueresco', 0.6279909610748291)\n",
            "('herreriano', 0.627683162689209)\n",
            "('románico-gótico', 0.6262031197547913)\n",
            "('Manierismo', 0.6209165453910828)\n",
            "\n",
            "Vecinos más cercanos de 'romanticismo':\n",
            "('románticismo', 0.8039975166320801)\n",
            "('romántico', 0.7511249780654907)\n",
            "('Romanticismo', 0.7438695430755615)\n",
            "('post-romanticismo', 0.7234586477279663)\n",
            "('romanticismos', 0.7226012945175171)\n",
            "('sentimentalismo', 0.711148202419281)\n",
            "('prerromanticismo', 0.7106376886367798)\n",
            "('idealismo', 0.7012122273445129)\n",
            "('romantismo', 0.6914984583854675)\n",
            "('decadentismo', 0.6896631121635437)\n",
            "('postromanticismo', 0.6867806911468506)\n",
            "('clasicismo', 0.680167555809021)\n",
            "('romanticista', 0.679827094078064)\n",
            "('romanticismo.', 0.6784418821334839)\n",
            "('romaticismo', 0.6755179762840271)\n",
            "('neo-romanticismo', 0.6656204462051392)\n",
            "('Prerromanticismo', 0.6644574999809265)\n",
            "('romantisismo', 0.6639053821563721)\n",
            "('posromanticismo', 0.662909984588623)\n",
            "('neoromanticismo', 0.6578214168548584)\n",
            "('neorromanticismo', 0.650428295135498)\n",
            "('Posromanticismo', 0.6484183669090271)\n",
            "('prerromántico', 0.6480515003204346)\n",
            "('lirismo', 0.6450379490852356)\n",
            "('sensualismo', 0.6449469327926636)\n",
            "('misticismo', 0.6435192823410034)\n",
            "('modernismo', 0.637618362903595)\n",
            "('erotismo', 0.6217613220214844)\n",
            "('romántica', 0.6213510036468506)\n",
            "('vitalismo', 0.6131212711334229)\n",
            "('Neorromanticismo', 0.609578013420105)\n",
            "('post-romántico', 0.6091978549957275)\n",
            "('neoclasicismo', 0.6002501249313354)\n",
            "('melodramatismo', 0.6001304388046265)\n",
            "('medievalismo', 0.5997494459152222)\n",
            "('positivismo', 0.5996346473693848)\n",
            "('trascendentalismo', 0.5996139049530029)\n",
            "('intimismo', 0.5981595516204834)\n",
            "('postromántico', 0.5980198383331299)\n",
            "('surrealismo', 0.5963195562362671)\n",
            "('romanticismo-', 0.5953901410102844)\n",
            "('antirromántico', 0.5919018983840942)\n",
            "('amoralismo', 0.5916641354560852)\n",
            "('costumbrismo', 0.5907551646232605)\n",
            "('epicismo', 0.5906741619110107)\n",
            "('humanismo', 0.5896092057228088)\n",
            "('realismo', 0.5892533659934998)\n",
            "('titanismo', 0.5881094932556152)\n",
            "('prerromántica', 0.5870156288146973)\n",
            "('irrealismo', 0.5863617062568665)\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Specify a list of words\n",
        "words = [\"filosofía\", \"historia\", \"literatura\", \"ética\", \"metafísica\", \"epistemología\", \"dialéctica\", \"idealismo\", \"realismo\", \"mito\", \"leyenda\", \"novela\", \"cuento\", \"poesía\", \"drama\", \"tragedia\", \"comedia\", \"renacimiento\", \"barroco\", \"romanticismo\"]\n",
        "# Specify the number of closest words you want to output\n",
        "number_of_words = 50\n",
        "\n",
        "for word in words:\n",
        "    if not word in words_covered:\n",
        "        # If the word is not covered by the model: ask for a new one\n",
        "        print(f'Word \"{word}\" not in the vocabulary. Specify a different word.')\n",
        "    else:\n",
        "        # If the word is covered, print its closest words\n",
        "        nearest_neighbors = ds_model.most_similar(word, topn = number_of_words)\n",
        "        print(f\"Vecinos más cercanos de '{word}':\")\n",
        "        for n in nearest_neighbors:\n",
        "            print(n)\n",
        "        print()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dbuy9Qs7ZrMW"
      },
      "source": [
        "# 4. Análisis cualitativo: Reducción de dimensionalidad y visualización de gráficas"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "G0AZb0sCbR5a"
      },
      "source": [
        "Como los vectores tienen 300 dimensiones, es imposible que podamos representarlos o entender lo que significan esos números. Por ello, tenemos que reducir la dimensionalidad de los vectores hasta un número de dimensiones que podamos entender: 1, 2 o 3 dimensiones.\n",
        "\n",
        "Primero, seleccionamos las palabras cuyos vectores queremos reducir en dimensionalidad:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "MlyilJmYi8Js"
      },
      "outputs": [],
      "source": [
        "# todas\n",
        "words_todas = ['tecnología', 'microtecnología', 'ordenador', 'tablet', 'pendrive', 'pc', 'miniportátil', 'superordenador', 'compu', 'software', 'freeware', 'desarrolador', 'hardware', 'chipset', 'driver', 'internet', 'programación', 're-programación', 'grilla', 'informática', 'microinformática', 'ciberseguridad', 'robótica', 'mecatrónica', 'bioingeniería', 'neurotecnología', 'nanoelectrónica', 'algoritmo', 'preprocesamiento', 'nanotecnología', 'nanocelulosa', 'nanofabricación', 'biociencia', 'nanoescala', 'nanomaterial', 'nanomundo', 'genética', 'energía', 'bioinformática', 'farmacogenómica', 'nutrigenómica', 'Metagenómica', 'biofarmacia', 'geociencia', 'farmacogenética', 'satélite', 'minisatélite', 'astromóvil', 'telecomunicaciones', 'Teleco', 'telco', 'operadoras', 'radiobases', 'telefónicas', 'criptografía', 'encriptamiento', 'cifrado', 'desencriptación', 'astronomía', 'Astrofotografía', 'microscopio', 'criomicroscopía', 'virus', 'supervirus', 'malware', 'norovirus', 'flavivirus', 'astrofísica', 'filosofía', 'historia', 'contrahistoria', 'literatura', 'subliteratura', 'ética', 'metafísica', 'epistemología', 'metateoría', 'dialéctica', 'discursividad', 'idealismo', 'irrealismo', 'sociologismo', 'ideologismo', 'emotivismo', 'revolucionarismo', 'realismo', 'mito', 'leyenda', 'novela', 'novela-río', 'novelización', 'cuento', 'audiocuento', 'minirelato', 'poesía', 'drama', 'comedia-drama', 'biodrama', 'tragedia', 'comedia', 'sitcom', 'renacimiento', 'revivalismo', 'revival', 'reencantamiento', 'barroco', 'romanticismo', 'neorromanticismo']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "bPPxQ9QYbb1Z"
      },
      "outputs": [],
      "source": [
        "# tecnología y ciencias: todas\n",
        "words_tec = ['tecnología', 'microtecnología', 'ordenador', 'tablet', 'pendrive', 'pc', 'miniportátil', 'superordenador', 'compu', 'software', 'freeware', 'desarrolador', 'hardware', 'chipset', 'driver', 'internet', 'programación', 're-programación', 'grilla', 'informática', 'microinformática', 'ciberseguridad', 'robótica', 'mecatrónica', 'bioingeniería', 'neurotecnología', 'nanoelectrónica', 'algoritmo', 'preprocesamiento', 'nanotecnología', 'nanocelulosa', 'nanofabricación', 'biociencia', 'nanoescala', 'nanomaterial', 'nanomundo', 'genética', 'energía', 'bioinformática', 'farmacogenómica', 'nutrigenómica', 'Metagenómica', 'biofarmacia', 'geociencia', 'farmacogenética', 'satélite', 'minisatélite', 'astromóvil', 'telecomunicaciones', 'Teleco', 'telco', 'operadoras', 'radiobases', 'telefónicas', 'criptografía', 'encriptamiento', 'cifrado', 'desencriptación', 'astronomía', 'Astrofotografía', 'microscopio', 'criomicroscopía', 'virus', 'supervirus', 'malware', 'norovirus', 'flavivirus', 'astrofísica']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "FXcxVcMY0LNX"
      },
      "outputs": [],
      "source": [
        "# tecnología y ciencias: los 20 términos seleccionados al principio\n",
        "words_tec_areas = ['tecnología', 'ordenador', 'software', 'hardware', 'internet', 'programación', 'informática', 'robótica', 'algoritmo', 'nanotecnología', 'genética', 'energía', 'bioinformática', 'satélite', 'telecomunicaciones', 'criptografía', 'astronomía', 'microscopio', 'virus', 'astrofísica']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "Fxv_bj7M0SD8"
      },
      "outputs": [],
      "source": [
        "# tecnología y ciencias: neologismos detectados (elimino 'pc' porque al hacer la gráfica veo que es un outlier y dificulta la visualización)\n",
        "words_tec_neo = ['microtecnología', 'tablet', 'pendrive', 'miniportátil', 'superordenador', 'compu', 'freeware', 'desarrolador', 'chipset', 'driver', 're-programación', 'grilla', 'microinformática', 'ciberseguridad', 'mecatrónica', 'bioingeniería', 'neurotecnología', 'nanoelectrónica', 'preprocesamiento', 'nanocelulosa', 'nanofabricación', 'biociencia', 'nanoescala', 'nanomaterial', 'nanomundo', 'farmacogenómica', 'nutrigenómica', 'Metagenómica', 'biofarmacia', 'geociencia', 'farmacogenética', 'minisatélite', 'astromóvil', 'Teleco', 'telco', 'operadoras', 'radiobases', 'telefónicas', 'encriptamiento', 'cifrado', 'desencriptación', 'Astrofotografía', 'criomicroscopía', 'supervirus', 'malware', 'norovirus', 'flavivirus']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "aN-GOiV52XMI"
      },
      "outputs": [],
      "source": [
        "# filosofía y literatura: todas\n",
        "words_lit = ['filosofía', 'historia', 'contrahistoria', 'literatura', 'subliteratura', 'ética', 'metafísica', 'epistemología', 'metateoría', 'dialéctica', 'discursividad', 'idealismo', 'irrealismo', 'sociologismo', 'ideologismo', 'emotivismo', 'revolucionarismo', 'realismo', 'mito', 'leyenda', 'novela', 'novela-río', 'novelización', 'cuento', 'audiocuento', 'minirelato', 'poesía', 'drama', 'comedia-drama', 'biodrama', 'tragedia', 'comedia', 'sitcom', 'renacimiento', 'revivalismo', 'revival', 'reencantamiento', 'barroco', 'romanticismo', 'neorromanticismo']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "-K2XHutLe9oD"
      },
      "outputs": [],
      "source": [
        "# filosofía y literatura: los 20 términos seleccionados al principio\n",
        "words_lit_areas = ['filosofía', 'historia', 'literatura', 'ética', 'metafísica', 'epistemología', 'dialéctica', 'idealismo', 'realismo', 'mito', 'leyenda', 'novela', 'cuento', 'poesía', 'drama', 'tragedia', 'comedia', 'renacimiento', 'barroco', 'romanticismo']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "YsJlQ_ii0W2a"
      },
      "outputs": [],
      "source": [
        "# filosofía y literatura: neologismos detectados\n",
        "words_lit_neo = ['contrahistoria', 'subliteratura', 'metateoría', 'discursividad', 'irrealismo', 'sociologismo', 'ideologismo', 'emotivismo', 'revolucionarismo', 'novela-río', 'novelización', 'audiocuento', 'minirelato', 'comedia-drama', 'biodrama', 'sitcom', 'revivalismo', 'revival', 'reencantamiento', 'neorromanticismo']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "irtTqH90eBTI"
      },
      "source": [
        "Utilizamos un método para reducir el espacio llamado Análisis de Componentes Principales, que intenta mantener la mayor cantidad de información posible de las 300 dimensiones originales hasta el nuevo número de dimensiones especificadas. Otra opción popular es t-sne."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "lMzE95TJZotQ"
      },
      "outputs": [],
      "source": [
        "### Reducción de dimensionalidad a 2D ###\n",
        "\n",
        "def reduce_dim(space, list_of_words):\n",
        "  # Tomamos los vectores de las palabras que nos interesan\n",
        "  X = np.array([space[key] for key in list_of_words])\n",
        "  # Elegimos la dimensionalidad que queremos\n",
        "  pca = PCA(n_components=2)\n",
        "  # Implementamos Análisis de Componentes Principales\n",
        "  vec_2D = pca.fit_transform(X)\n",
        "  # Creamos un diccionario con los nuevos vectores de las palabras\n",
        "  space_2D = dict(zip(list_of_words, vec_2D))\n",
        "  return space_2D"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "KYew5Nk0aObA"
      },
      "outputs": [],
      "source": [
        "reduced_space_words_todas = reduce_dim(ds_model, words_todas)\n",
        "reduced_space_words_tec = reduce_dim(ds_model, words_tec)\n",
        "reduced_space_words_tec_areas = reduce_dim(ds_model, words_tec_areas)\n",
        "reduced_space_words_tec_neo = reduce_dim(ds_model, words_tec_neo)\n",
        "reduced_space_words_lit = reduce_dim(ds_model, words_lit)\n",
        "reduced_space_words_lit_areas = reduce_dim(ds_model, words_lit_areas)\n",
        "reduced_space_words_lit_neo = reduce_dim(ds_model, words_lit_neo)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_fVRhMOTaXCd"
      },
      "source": [
        "Hemos convertido las 300 dimensiones originales de los vectores de las palabras en 2 dimensiones. Veamos la diferencia:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3HxOkrAoaijm",
        "outputId": "4c908d16-c705-4d16-a2ec-b3aa997e61a9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Nuevo vector en 2D de 'tecnología': [-0.05984468 -0.13447149]\n",
            "\n",
            "Vector original de 300 dimensiones de 'tecnología':\n",
            "[-0.0112  0.0106  0.0395  0.0362 -0.0326  0.0044  0.0295 -0.0103  0.0144\n",
            " -0.0348 -0.0382 -0.0231 -0.0103 -0.0459 -0.014  -0.0194  0.0073  0.0004\n",
            "  0.0121 -0.0116 -0.0098 -0.0288  0.0143  0.0543 -0.0102 -0.0344 -0.0234\n",
            " -0.0085 -0.0041 -0.0202 -0.0102  0.041   0.0083 -0.0034 -0.0186 -0.0316\n",
            "  0.0122  0.008   0.0076  0.0126 -0.0427 -0.0186  0.0152 -0.0073  0.0244\n",
            "  0.0221  0.0237 -0.0019  0.009  -0.0027 -0.019  -0.0078 -0.0127 -0.0383\n",
            "  0.0458  0.0376  0.0222  0.0034 -0.0009 -0.0315  0.0229  0.0264 -0.0039\n",
            "  0.0133 -0.0182  0.015  -0.0058 -0.0114  0.0133 -0.0224  0.007  -0.0124\n",
            " -0.0073  0.023  -0.0101 -0.038   0.0161  0.0407 -0.012  -0.0561 -0.0051\n",
            " -0.0104 -0.0087  0.0073 -0.0397  0.0243 -0.0478  0.0246 -0.0084  0.0059\n",
            "  0.0003 -0.0393  0.0368  0.0044  0.0154  0.014   0.012  -0.0184  0.0017\n",
            "  0.0174  0.014   0.008  -0.0219 -0.0555  0.0301 -0.0036 -0.0319 -0.0158\n",
            "  0.0114  0.0045 -0.0012 -0.0011 -0.0207  0.0314  0.0209  0.0122 -0.0074\n",
            " -0.0189 -0.0193  0.0172  0.0432 -0.0169 -0.0464  0.045   0.0123 -0.0346\n",
            " -0.0125  0.0396 -0.0458  0.0157 -0.0094  0.0414 -0.0203  0.0688  0.0237\n",
            " -0.02    0.0398  0.0233 -0.0398 -0.0197 -0.0358  0.0443  0.0289 -0.0021\n",
            "  0.0122 -0.0032  0.0303  0.0196 -0.0067  0.0081  0.0374 -0.0184  0.0039\n",
            "  0.0113  0.0244 -0.0433  0.0552 -0.0285  0.0411 -0.0529  0.0113  0.0097\n",
            "  0.0185  0.0046  0.0607  0.009   0.0174  0.0006  0.0046  0.0421 -0.0113\n",
            "  0.0085  0.0111  0.0006  0.0548  0.0025  0.0258 -0.0115  0.0311 -0.0101\n",
            "  0.0299  0.0583  0.0362  0.0096 -0.0086 -0.0345 -0.018   0.0128 -0.0186\n",
            " -0.0091  0.0192 -0.0039  0.0064 -0.0148 -0.0225  0.0026 -0.0048  0.0313\n",
            "  0.0491  0.0761 -0.0313  0.0006 -0.016  -0.0032  0.0151  0.0462 -0.0114\n",
            " -0.0544 -0.0284 -0.0255 -0.0149 -0.0177 -0.0299  0.0061  0.0044  0.0036\n",
            "  0.025   0.0463  0.015  -0.0236  0.0028 -0.0027  0.0326 -0.0194  0.0022\n",
            "  0.0139 -0.0186  0.0297  0.0031 -0.077  -0.0633  0.0181 -0.017   0.0342\n",
            " -0.0196  0.0176  0.0008  0.0119 -0.0298 -0.0495 -0.0072 -0.0176  0.0494\n",
            " -0.005  -0.0413  0.0183  0.0096  0.0497 -0.0082 -0.0191  0.0601 -0.0086\n",
            "  0.0253  0.0478 -0.0088 -0.0034  0.0387  0.0388  0.027  -0.0071  0.0238\n",
            " -0.004  -0.0002 -0.0305  0.0244 -0.0048  0.0261 -0.0241 -0.0185 -0.0244\n",
            "  0.0235 -0.0279 -0.032  -0.0589 -0.0317 -0.0043  0.0087 -0.0441  0.0027\n",
            "  0.0167 -0.0273 -0.0306 -0.0111 -0.0194 -0.0177  0.0403 -0.0264 -0.0114\n",
            "  0.0293 -0.0504 -0.0548 -0.0349 -0.0242  0.0074  0.0087  0.013  -0.0028\n",
            " -0.0007 -0.013   0.0349]\n"
          ]
        }
      ],
      "source": [
        "print(\"Nuevo vector en 2D de 'tecnología':\", reduced_space_words_todas['tecnología'])\n",
        "print()\n",
        "print(\"Vector original de 300 dimensiones de 'tecnología':\")\n",
        "print(ds_model['tecnología'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6dcm2rmHa8oe"
      },
      "source": [
        "Ya podemos visualizar una gráfica mostrando los nuevos vectores de nuestras palabras en 2D. El eje X representará el valor de la primera dimensión y el eje Y representará el valor de la segunda dimensión. Utilizamos la función definida en '1. Funciones auxiliares' que crea un gráfico para una lista de palabras determinada de un espacio 2D:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "HUKSqyQrv8C3"
      },
      "outputs": [],
      "source": [
        "prototypes = words_todas\n",
        "\n",
        "category_names = [\"Tecnología y ciencias: términos = 20\",\n",
        "                \"Tecnología y ciencias: neologismos = 48\",\n",
        "                \"Filosofía y literatura: términos = 20\",\n",
        "                \"Filosofía y literatura: neologismos = 20\",]\n",
        "all_categories = [words_tec_areas, words_tec_neo, words_lit_areas, words_lit_neo]\n",
        "\n",
        "# Creamos un diccionario de dominios para las funciones de la gráfica\n",
        "domains = {}\n",
        "\n",
        "for word in words_tec_areas:\n",
        "  domains[word] = \"Tecnología y ciencias: términos = 20\"\n",
        "\n",
        "for word in words_tec_neo:\n",
        "  domains[word] = \"Tecnología y ciencias: neologismos = 48\"\n",
        "\n",
        "for word in words_lit_areas:\n",
        "  domains[word] = \"Filosofía y literatura: términos = 20\"\n",
        "\n",
        "for word in words_lit_neo:\n",
        "  domains[word] = \"Filosofía y literatura: neologismos = 20\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 445
        },
        "id": "WljDgaAZl52l",
        "outputId": "02ccd97d-e0b6-422c-db3c-48736eb0481d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "visualize(words_tec_areas\n",
        "          +words_tec_neo\n",
        "          +words_lit_areas\n",
        "          +words_lit_neo, reduced_space_words_todas, domains)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6Rw4jO7_8Kap"
      },
      "source": [
        "También podemos reducir la dimensionalidad a 3 dimensiones en vez de a 2 para visualizar una gráfica en 3D. El eje X representará el valor de la primera dimensión, el eje Y representará el valor de la segunda dimensión, y el eje Z representará el valor de la tercera dimensión. Utilizamos la función definida en '1. Funciones auxiliares' que crea un gráfico para una lista de palabras determinada de un espacio 3D:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "dsZM01rzERxj"
      },
      "outputs": [],
      "source": [
        "### Reducción de dimensionalidad a 3D ###\n",
        "\n",
        "def reduce_dim_3D(space, list_of_words):\n",
        "  # Tomamos los vectores de las palabras que nos interesan\n",
        "  X = np.array([space[key] for key in list_of_words])\n",
        "  # Elegimos la dimensionalidad que queremos\n",
        "  pca = PCA(n_components=3)\n",
        "  # Implementamos Análisis de Componentes Principales\n",
        "  vec_3D = pca.fit_transform(X)\n",
        "  # Creamos un diccionario con los nuevos vectores de las palabras\n",
        "  space_3D = dict(zip(list_of_words, vec_3D))\n",
        "  return space_3D"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "MckygSSrEsYk"
      },
      "outputs": [],
      "source": [
        "reduced_space_words_todas_3D = reduce_dim_3D(ds_model, words_todas)\n",
        "reduced_space_words_tec_3D = reduce_dim_3D(ds_model, words_tec)\n",
        "reduced_space_words_tec_areas_3D = reduce_dim_3D(ds_model, words_tec_areas)\n",
        "reduced_space_words_tec_neo_3D = reduce_dim_3D(ds_model, words_tec_neo)\n",
        "reduced_space_words_hist_3D = reduce_dim_3D(ds_model, words_lit)\n",
        "reduced_space_words_hist_areas_3D = reduce_dim_3D(ds_model, words_lit_areas)\n",
        "reduced_space_words_hist_neo_3D = reduce_dim_3D(ds_model, words_lit_neo)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "OZLsoa6JCzDo",
        "outputId": "41f9842e-301f-4815-ce6b-4919af5c0982"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"61e15ab7-7063-4d4c-919c-03e3fa883f0d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"61e15ab7-7063-4d4c-919c-03e3fa883f0d\")) {                    Plotly.newPlot(                        \"61e15ab7-7063-4d4c-919c-03e3fa883f0d\",                        [{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"tecnolog\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.05984468013048172],\"y\":[-0.13447149097919464],\"z\":[-0.10423563420772552],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"ordenador\"],\"textposition\":\"top center\",\"x\":[0.21190208196640015],\"y\":[-0.04078519344329834],\"z\":[0.07683712244033813],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"software\"],\"textposition\":\"top center\",\"x\":[0.057895831763744354],\"y\":[-0.1399012953042984],\"z\":[0.17803601920604706],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"hardware\"],\"textposition\":\"top center\",\"x\":[0.10862690210342407],\"y\":[-0.15493902564048767],\"z\":[0.2027462273836136],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"internet\"],\"textposition\":\"top center\",\"x\":[0.07192941755056381],\"y\":[-0.07838529348373413],\"z\":[0.0316874198615551],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"programaci\\u00f3n\"],\"textposition\":\"top center\",\"x\":[-0.043001919984817505],\"y\":[-0.048339128494262695],\"z\":[-0.08273667842149734],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"inform\\u00e1tica\"],\"textposition\":\"top center\",\"x\":[0.006171231158077717],\"y\":[-0.12869054079055786],\"z\":[-0.04739494249224663],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"rob\\u00f3tica\"],\"textposition\":\"top center\",\"x\":[-0.06819752603769302],\"y\":[-0.17615550756454468],\"z\":[-0.15194685757160187],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"algoritmo\"],\"textposition\":\"top center\",\"x\":[-0.05821915343403816],\"y\":[-0.08525096625089645],\"z\":[0.14199095964431763],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanotecnolog\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.07124920934438705],\"y\":[-0.1404539793729782],\"z\":[-0.06573010236024857],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"gen\\u00e9tica\"],\"textposition\":\"top center\",\"x\":[-0.12217774242162704],\"y\":[-0.101392962038517],\"z\":[-0.01315382495522499],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"energ\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.03813018277287483],\"y\":[-0.060909103602170944],\"z\":[-0.09992958605289459],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"bioinform\\u00e1tica\"],\"textposition\":\"top center\",\"x\":[-0.05469507724046707],\"y\":[-0.167876198887825],\"z\":[-0.06724169105291367],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"sat\\u00e9lite\"],\"textposition\":\"top center\",\"x\":[-0.022366443648934364],\"y\":[-0.12628988921642303],\"z\":[0.03385857120156288],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"telecomunicaciones\"],\"textposition\":\"top center\",\"x\":[-0.039195116609334946],\"y\":[-0.145012766122818],\"z\":[-0.07377658039331436],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"criptograf\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.04526098072528839],\"y\":[-0.09350109845399857],\"z\":[-0.014413068071007729],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"astronom\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.054250892251729965],\"y\":[-0.036134567111730576],\"z\":[-0.19556058943271637],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"microscopio\"],\"textposition\":\"top center\",\"x\":[0.026623407378792763],\"y\":[-0.09398967027664185],\"z\":[-0.013066984713077545],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"virus\"],\"textposition\":\"top center\",\"x\":[0.21205590665340424],\"y\":[-0.06450293213129044],\"z\":[0.8966322541236877],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"astrof\\u00edsica\"],\"textposition\":\"top center\",\"x\":[-0.05855477973818779],\"y\":[-0.06612134724855423],\"z\":[-0.1760997176170349],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"microtecnolog\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.05133070796728134],\"y\":[-0.10982795059680939],\"z\":[-0.0854073017835617],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"tablet\"],\"textposition\":\"top center\",\"x\":[0.3013766407966614],\"y\":[-0.11403404176235199],\"z\":[0.05887181684374809],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"pendrive\"],\"textposition\":\"top center\",\"x\":[0.2090320587158203],\"y\":[-0.044662199914455414],\"z\":[0.24894675612449646],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"miniport\\u00e1til\"],\"textposition\":\"top center\",\"x\":[0.06024058908224106],\"y\":[-0.09039809554815292],\"z\":[0.030296865850687027],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"superordenador\"],\"textposition\":\"top center\",\"x\":[-0.005715083796530962],\"y\":[-0.1132538691163063],\"z\":[0.06955336779356003],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"compu\"],\"textposition\":\"top center\",\"x\":[0.6526548266410828],\"y\":[-0.0515684075653553],\"z\":[-0.00957075972110033],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"freeware\"],\"textposition\":\"top center\",\"x\":[0.13585525751113892],\"y\":[-0.05261894688010216],\"z\":[0.18691588938236237],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"desarrolador\"],\"textposition\":\"top center\",\"x\":[-0.0024604967329651117],\"y\":[-0.0663520023226738],\"z\":[0.04081903398036957],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"chipset\"],\"textposition\":\"top center\",\"x\":[0.13028426468372345],\"y\":[-0.16695822775363922],\"z\":[0.3020751178264618],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"driver\"],\"textposition\":\"top center\",\"x\":[0.23213067650794983],\"y\":[-0.10200010240077972],\"z\":[0.4081575274467468],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"re-programaci\\u00f3n\"],\"textposition\":\"top center\",\"x\":[-0.04482985660433769],\"y\":[-0.04649801179766655],\"z\":[-0.06643721461296082],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"grilla\"],\"textposition\":\"top center\",\"x\":[-0.0282412339001894],\"y\":[-0.05791628733277321],\"z\":[-0.2556595206260681],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"microinform\\u00e1tica\"],\"textposition\":\"top center\",\"x\":[0.014744056388735771],\"y\":[-0.09801671653985977],\"z\":[-0.05718667432665825],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"ciberseguridad\"],\"textposition\":\"top center\",\"x\":[-0.022259466350078583],\"y\":[-0.13950085639953613],\"z\":[0.0022618332877755165],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"mecatr\\u00f3nica\"],\"textposition\":\"top center\",\"x\":[-0.05365379899740219],\"y\":[-0.17580214142799377],\"z\":[-0.1574312001466751],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"bioingenier\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.11412841081619263],\"y\":[-0.13768494129180908],\"z\":[-0.05237513780593872],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"neurotecnolog\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.07605481147766113],\"y\":[-0.12466534972190857],\"z\":[-0.09678804874420166],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanoelectr\\u00f3nica\"],\"textposition\":\"top center\",\"x\":[-0.06050073355436325],\"y\":[-0.16462740302085876],\"z\":[-0.06679113209247589],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"preprocesamiento\"],\"textposition\":\"top center\",\"x\":[-0.05973527953028679],\"y\":[-0.07655191421508789],\"z\":[-0.025197308510541916],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanocelulosa\"],\"textposition\":\"top center\",\"x\":[-0.07889283448457718],\"y\":[-0.15112993121147156],\"z\":[-0.057097893208265305],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanofabricaci\\u00f3n\"],\"textposition\":\"top center\",\"x\":[-0.07040748000144958],\"y\":[-0.14450673758983612],\"z\":[-0.06964783370494843],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"biociencia\"],\"textposition\":\"top center\",\"x\":[-0.13007526099681854],\"y\":[-0.16989365220069885],\"z\":[-0.09601044654846191],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanoescala\"],\"textposition\":\"top center\",\"x\":[-0.04979421943426132],\"y\":[-0.2532387971878052],\"z\":[-0.06933020800352097],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanomaterial\"],\"textposition\":\"top center\",\"x\":[-0.0914473682641983],\"y\":[-0.12779390811920166],\"z\":[0.05139767378568649],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nanomundo\"],\"textposition\":\"top center\",\"x\":[-0.07652968913316727],\"y\":[-0.12201842665672302],\"z\":[-0.03717569634318352],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"farmacogen\\u00f3mica\"],\"textposition\":\"top center\",\"x\":[-0.1496889293193817],\"y\":[-0.1373361051082611],\"z\":[0.030459163710474968],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"nutrigen\\u00f3mica\"],\"textposition\":\"top center\",\"x\":[-0.1553470641374588],\"y\":[-0.10279763489961624],\"z\":[-0.06845524907112122],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"Metagen\\u00f3mica\"],\"textposition\":\"top center\",\"x\":[-0.10259830206632614],\"y\":[-0.16574221849441528],\"z\":[-0.011440708301961422],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"biofarmacia\"],\"textposition\":\"top center\",\"x\":[-0.10754897445440292],\"y\":[-0.15657496452331543],\"z\":[-0.09567394107580185],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"geociencia\"],\"textposition\":\"top center\",\"x\":[-0.09012695401906967],\"y\":[-0.13311636447906494],\"z\":[-0.1634541153907776],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"farmacogen\\u00e9tica\"],\"textposition\":\"top center\",\"x\":[-0.11839516460895538],\"y\":[-0.10288349539041519],\"z\":[-0.06171352043747902],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"minisat\\u00e9lite\"],\"textposition\":\"top center\",\"x\":[-0.05626550689339638],\"y\":[-0.10751868039369583],\"z\":[0.03794319927692413],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"astrom\\u00f3vil\"],\"textposition\":\"top center\",\"x\":[-0.04005773738026619],\"y\":[-0.07896412909030914],\"z\":[0.025498677045106888],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"Teleco\"],\"textposition\":\"top center\",\"x\":[-0.028352031484246254],\"y\":[-0.3705100119113922],\"z\":[-0.09783921390771866],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"telco\"],\"textposition\":\"top center\",\"x\":[0.1265765279531479],\"y\":[-0.5152350664138794],\"z\":[-0.07253199815750122],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"operadoras\"],\"textposition\":\"top center\",\"x\":[-0.01897520013153553],\"y\":[-0.15814636647701263],\"z\":[-0.014314886182546616],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"radiobases\"],\"textposition\":\"top center\",\"x\":[0.017185254022479057],\"y\":[-0.20356310904026031],\"z\":[-0.039568059146404266],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"telef\\u00f3nicas\"],\"textposition\":\"top center\",\"x\":[-0.019079221412539482],\"y\":[-0.12250293791294098],\"z\":[-0.04221077635884285],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"encriptamiento\"],\"textposition\":\"top center\",\"x\":[-0.03448675572872162],\"y\":[-0.07553992420434952],\"z\":[0.07101022452116013],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"cifrado\"],\"textposition\":\"top center\",\"x\":[-0.03793499618768692],\"y\":[-0.07977279275655746],\"z\":[0.2819780111312866],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"desencriptaci\\u00f3n\"],\"textposition\":\"top center\",\"x\":[-0.04034244641661644],\"y\":[-0.08878510445356369],\"z\":[0.050488535314798355],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"Astrofotograf\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.04237843304872513],\"y\":[-0.09514373540878296],\"z\":[-0.14594334363937378],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"criomicroscop\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.05732971057295799],\"y\":[-0.11557662487030029],\"z\":[-0.08438466489315033],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"supervirus\"],\"textposition\":\"top center\",\"x\":[-0.029151851311326027],\"y\":[-0.07542721927165985],\"z\":[0.16700057685375214],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"malware\"],\"textposition\":\"top center\",\"x\":[0.10382349044084549],\"y\":[-0.12706851959228516],\"z\":[0.6414622068405151],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"norovirus\"],\"textposition\":\"top center\",\"x\":[-0.051918964833021164],\"y\":[-0.10476493835449219],\"z\":[0.28635063767433167],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"flavivirus\"],\"textposition\":\"top center\",\"x\":[-0.10922008752822876],\"y\":[-0.10140308737754822],\"z\":[0.29806944727897644],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"filosof\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.12874534726142883],\"y\":[0.09613486379384995],\"z\":[-0.14808784425258636],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"historia\"],\"textposition\":\"top center\",\"x\":[-0.08859524875879288],\"y\":[0.1586538553237915],\"z\":[-0.13065923750400543],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"literatura\"],\"textposition\":\"top center\",\"x\":[-0.06351009756326675],\"y\":[0.14789891242980957],\"z\":[-0.13130295276641846],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"\\u00e9tica\"],\"textposition\":\"top center\",\"x\":[-0.17605414986610413],\"y\":[0.15348078310489655],\"z\":[-0.20958827435970306],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"metaf\\u00edsica\"],\"textposition\":\"top center\",\"x\":[-0.10984526574611664],\"y\":[0.1261267215013504],\"z\":[-0.1368582546710968],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"epistemolog\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.08929354697465897],\"y\":[0.03353936970233917],\"z\":[-0.12711161375045776],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"dial\\u00e9ctica\"],\"textposition\":\"top center\",\"x\":[-0.10116657614707947],\"y\":[0.10928957164287567],\"z\":[-0.12416921555995941],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"idealismo\"],\"textposition\":\"top center\",\"x\":[-0.12064805626869202],\"y\":[0.2770371437072754],\"z\":[0.022265145555138588],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"realismo\"],\"textposition\":\"top center\",\"x\":[-0.06776388734579086],\"y\":[0.3098107576370239],\"z\":[0.021849172189831734],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"mito\"],\"textposition\":\"top center\",\"x\":[-0.16400697827339172],\"y\":[0.7675621509552002],\"z\":[0.4214807152748108],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"leyenda\"],\"textposition\":\"top center\",\"x\":[-0.11420897394418716],\"y\":[0.23978868126869202],\"z\":[-0.03861949220299721],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"novela\"],\"textposition\":\"top center\",\"x\":[-0.07306285947561264],\"y\":[0.34925559163093567],\"z\":[-0.1226629838347435],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"cuento\"],\"textposition\":\"top center\",\"x\":[-0.05783188343048096],\"y\":[0.2843615710735321],\"z\":[0.10204833000898361],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"poes\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.110146164894104],\"y\":[0.3018493354320526],\"z\":[-0.1894233524799347],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"drama\"],\"textposition\":\"top center\",\"x\":[-0.09624949097633362],\"y\":[0.592303454875946],\"z\":[0.11455168575048447],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"tragedia\"],\"textposition\":\"top center\",\"x\":[-0.14714495837688446],\"y\":[0.24539294838905334],\"z\":[-0.06833484768867493],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"comedia\"],\"textposition\":\"top center\",\"x\":[-0.12369371205568314],\"y\":[0.35314732789993286],\"z\":[-0.13939033448696136],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"renacimiento\"],\"textposition\":\"top center\",\"x\":[-0.07301326841115952],\"y\":[0.10711284726858139],\"z\":[-0.031138192862272263],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"barroco\"],\"textposition\":\"top center\",\"x\":[-0.07232524454593658],\"y\":[0.31009581685066223],\"z\":[0.008926015347242355],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"romanticismo\"],\"textposition\":\"top center\",\"x\":[-0.10232800990343094],\"y\":[0.18791548907756805],\"z\":[0.01285332441329956],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"contrahistoria\"],\"textposition\":\"top center\",\"x\":[-0.10783697664737701],\"y\":[0.09594177454710007],\"z\":[-0.08656686544418335],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"subliteratura\"],\"textposition\":\"top center\",\"x\":[-0.0692533403635025],\"y\":[0.10669222474098206],\"z\":[-0.08401884883642197],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"metateor\\u00eda\"],\"textposition\":\"top center\",\"x\":[-0.08663217723369598],\"y\":[0.04852558299899101],\"z\":[-0.13395531475543976],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"discursividad\"],\"textposition\":\"top center\",\"x\":[-0.09249494969844818],\"y\":[0.08488871902227402],\"z\":[-0.10903365164995193],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"irrealismo\"],\"textposition\":\"top center\",\"x\":[-0.12934093177318573],\"y\":[0.20358175039291382],\"z\":[0.025180663913488388],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"sociologismo\"],\"textposition\":\"top center\",\"x\":[-0.09443975239992142],\"y\":[0.1274499148130417],\"z\":[-0.016235793009400368],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"ideologismo\"],\"textposition\":\"top center\",\"x\":[-0.07504696398973465],\"y\":[0.1423543244600296],\"z\":[0.03424318879842758],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"emotivismo\"],\"textposition\":\"top center\",\"x\":[-0.11225885152816772],\"y\":[0.16775943338871002],\"z\":[0.021556613966822624],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"revolucionarismo\"],\"textposition\":\"top center\",\"x\":[-0.08712588995695114],\"y\":[0.07919026166200638],\"z\":[0.0005871944595128298],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"novela-r\\u00edo\"],\"textposition\":\"top center\",\"x\":[-0.05908435210585594],\"y\":[0.20833924412727356],\"z\":[-0.12006662786006927],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"novelizaci\\u00f3n\"],\"textposition\":\"top center\",\"x\":[-0.034016795456409454],\"y\":[0.11795756965875626],\"z\":[-0.06296400725841522],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"audiocuento\"],\"textposition\":\"top center\",\"x\":[-0.07865442335605621],\"y\":[0.08118551224470139],\"z\":[0.04215508699417114],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"minirelato\"],\"textposition\":\"top center\",\"x\":[-0.05071859806776047],\"y\":[0.17090214788913727],\"z\":[0.03558570519089699],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"comedia-drama\"],\"textposition\":\"top center\",\"x\":[-0.12204218655824661],\"y\":[0.11947820335626602],\"z\":[-0.07370249181985855],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"biodrama\"],\"textposition\":\"top center\",\"x\":[-0.10782663524150848],\"y\":[0.1842912882566452],\"z\":[-0.028940578922629356],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"sitcom\"],\"textposition\":\"top center\",\"x\":[-0.05666980519890785],\"y\":[0.2799408435821533],\"z\":[-0.11277113854885101],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"revivalismo\"],\"textposition\":\"top center\",\"x\":[-0.09320677071809769],\"y\":[0.1804753541946411],\"z\":[0.06765295565128326],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"revival\"],\"textposition\":\"top center\",\"x\":[-0.05273814499378204],\"y\":[0.2782561480998993],\"z\":[0.07787849754095078],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"reencantamiento\"],\"textposition\":\"top center\",\"x\":[-0.11627057194709778],\"y\":[0.07627152651548386],\"z\":[-0.0317423939704895],\"type\":\"scatter3d\"},{\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers\",\"showlegend\":false,\"text\":[\"neorromanticismo\"],\"textposition\":\"top center\",\"x\":[-0.08742647618055344],\"y\":[0.13145996630191803],\"z\":[-0.01660393364727497],\"type\":\"scatter3d\"},{\"legendgroup\":\"Filosof\\u00eda y literatura: t\\u00e9rminos = 20\",\"marker\":{\"color\":\"red\",\"size\":5},\"mode\":\"markers+text\",\"name\":\"Filosof\\u00eda y literatura: t\\u00e9rminos = 20\",\"text\":[\"Filosof\\u00eda y literatura: t\\u00e9rminos = 20\"],\"x\":[null],\"y\":[null],\"z\":[null],\"type\":\"scatter3d\"},{\"legendgroup\":\"Filosof\\u00eda y literatura: neologismos = 20\",\"marker\":{\"color\":\"blue\",\"size\":5},\"mode\":\"markers+text\",\"name\":\"Filosof\\u00eda y literatura: neologismos = 20\",\"text\":[\"Filosof\\u00eda y literatura: neologismos = 20\"],\"x\":[null],\"y\":[null],\"z\":[null],\"type\":\"scatter3d\"},{\"legendgroup\":\"Tecnolog\\u00eda y ciencias: neologismos = 48\",\"marker\":{\"color\":\"green\",\"size\":5},\"mode\":\"markers+text\",\"name\":\"Tecnolog\\u00eda y ciencias: neologismos = 48\",\"text\":[\"Tecnolog\\u00eda y ciencias: neologismos = 48\"],\"x\":[null],\"y\":[null],\"z\":[null],\"type\":\"scatter3d\"},{\"legendgroup\":\"Tecnolog\\u00eda y ciencias: t\\u00e9rminos = 20\",\"marker\":{\"color\":\"black\",\"size\":5},\"mode\":\"markers+text\",\"name\":\"Tecnolog\\u00eda y ciencias: t\\u00e9rminos = 20\",\"text\":[\"Tecnolog\\u00eda y ciencias: t\\u00e9rminos = 20\"],\"x\":[null],\"y\":[null],\"z\":[null],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"xaxis\":{\"range\":[-0.5023815631866455,0.9789822399616241]},\"yaxis\":{\"range\":[-0.8990161418914795,1.1513432264328003]},\"zaxis\":{\"range\":[-0.703975647687912,1.3449483811855316]},\"aspectmode\":\"cube\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('61e15ab7-7063-4d4c-919c-03e3fa883f0d');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "visualize_3d_interactive(words_tec_areas\n",
        "                         +words_tec_neo\n",
        "                         +words_lit_areas\n",
        "                         +words_lit_neo,\n",
        "                         reduced_space_words_todas_3D,\n",
        "                         domains,\n",
        "                         \"plot_3D\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N0EC7EOLIxg1"
      },
      "source": [
        "# 5. Análisis cuantitativo:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PFLrKai2tZjV"
      },
      "source": [
        "Para ver si los resultados son estadísticamente significativos podemos hacer el test de chi cuadrado, una prueba estándar en estadística y en trabajos de corpus. En lingüística, normalmente se establece el valor de p en 0.05. Si el valor obtenido es mayor, podemos afirmar que la diferencia en el número de neologismos obtenidos en ambos vecindarios semánticos es estadísticamente significativa."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YCBfM6YsrlQ3",
        "outputId": "81dd9a5f-0fc8-403b-be4c-e72407d74b5e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valor de chi cuadrado: 3.138831666630977\n",
            "Valor p: 0.0764485518570645\n"
          ]
        }
      ],
      "source": [
        "from scipy.stats import chi2_contingency\n",
        "\n",
        "# Número de neologismos en los dos vecindarios semánticos\n",
        "neo_tec = len(words_tec_neo)\n",
        "neo_lit = len(words_lit_neo)\n",
        "\n",
        "# Número total de observaciones en cada uno de los vecindarios semánticos\n",
        "total_tec = len(words_tec)\n",
        "total_lit = len(words_lit)\n",
        "\n",
        "# Tabla de contingencia 2x2\n",
        "observed = [[neo_tec, total_tec - neo_tec],\n",
        "            [neo_lit, total_lit - neo_lit]]\n",
        "\n",
        "# Cálculo del test chi cuadrado\n",
        "chi2, p_value, _, _ = chi2_contingency(observed)\n",
        "\n",
        "print(\"Valor de chi cuadrado:\", chi2)\n",
        "print(\"Valor p:\", p_value)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ef7w0o1nuHW2"
      },
      "source": [
        "Sin embargo, como nuestra muestra es relativamente pequeña, puede ser buena idea realizar otra prueba de significación estadística: la prueba exacta de Fisher. Esta prueba es menos sensible a tamaños de muestra pequeños y consigue dar un p-value exacto en vez de una aproximación como en el test de chi cuadrado. Aun así, se puede usar para cualesquiera tamaños de muestra."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iZrdFzM9rJVT",
        "outputId": "c30a0429-76d6-4677-9cb3-4564b2f735a2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Razón de probabilidades: 2.238095238095238\n",
            "Valor p: 0.06467619982053249\n"
          ]
        }
      ],
      "source": [
        "from scipy.stats import fisher_exact\n",
        "\n",
        "# Número de neologismos en los dos vecindarios semánticos\n",
        "neo_tec = len(words_tec_neo)\n",
        "neo_lit = len(words_lit_neo)\n",
        "\n",
        "# Número total de observaciones en cada uno de los vecindarios semánticos\n",
        "total_tec = len(words_tec)\n",
        "total_lit = len(words_lit)\n",
        "\n",
        "# Tabla de contingencia 2x2\n",
        "contingency_table = [[neo_tec, total_tec - neo_tec],\n",
        "                     [neo_lit, total_lit - neo_lit]]\n",
        "\n",
        "# Cálculo de la prueba exacta de Fisher\n",
        "odds_ratio, p_value = fisher_exact(contingency_table)\n",
        "\n",
        "print(\"Razón de probabilidades:\", odds_ratio)\n",
        "print(\"Valor p:\", p_value)\n"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": [],
      "authorship_tag": "ABX9TyOFM3tdU7sk0v84I/FQJbIb"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
